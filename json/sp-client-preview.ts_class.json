{
  "BaseClientSideWebPart": {
    "implementsExtendsName": null,
    "genericType": "TProperties",
    "descr": "This abstract class implements the the base functionality for a client side web part. Every client side web part \nneeds to inherit from this class. Along with the base functionality, this class provides some APIs that can be \nused by the web part. These APIs fall in two catagories. \n \nThe first category of APIs provide data and functionality. Example, the web part context (i.e. this.context). This \nAPI should be used to access contextual data relevant to this web part instance. \n \nThe second category of APIs provide a base implementation for the web part lifecycle and can be overridden for an \nupdated implementation. The render() API is the only API that is mandatory to be implemented/overridden by a web \npart. All other life cycle APIs have a base implementation and can be overridden based on the needs of the web part. \nPlease refer to the documentation of the individual APIs to make the right decision.",
    "properties": {
      "accessibleTitle": {
        "dataType": "string",
        "accessModifier": "protected",
        "isOptional": false,
        "type": " string",
        "isCollection": false,
        "descr": "This property points to the accessible title of web part made available to screen readers. The base implementation \nreturns that default title in the manifest. Web parts that want to provide more descriptive title containing \ncontextual information need to override this API. \n"
      },
      "context": {
        "dataType": "IWebPartContext",
        "accessModifier": "protected",
        "isOptional": false,
        "type": " IWebPartContext",
        "isCollection": false,
        "descr": ""
      },
      "disableReactivePropertyChanges": {
        "dataType": "boolean",
        "accessModifier": "protected",
        "isOptional": false,
        "type": " boolean",
        "isCollection": false,
        "descr": "This property is used to change the web part's PropertyPane interaction from Reactive to NonReactive. The default \nbehaviour is Reactive. Where, \nReactive implies that changes made in the PropertyPane are transmitted to the web part instantly and the user can \nsee instant updates. This helps the page creator get instant feedback and decide if they should keep the new \nconfiguration changes or not. \nNonReactive implies that the configuraiton changes are transmitted to the web part only after 'Apply' PropertyPane \nbutton is clicked. \n"
      },
      "displayMode": {
        "dataType": "DisplayMode",
        "accessModifier": "protected",
        "isOptional": false,
        "type": " DisplayMode",
        "isCollection": false,
        "descr": "This property is the current display mode of the web part. \n"
      },
      "domElement": {
        "dataType": "HTMLElement",
        "accessModifier": "protected",
        "isOptional": false,
        "type": " HTMLElement",
        "isCollection": false,
        "descr": "This property is a pointer to the root DOM element of the web part. This is a DIV element and contains the whole \nDOM subtree of the web part. \n"
      },
      "previewImageUrl": {
        "dataType": "string",
        "accessModifier": "protected",
        "isOptional": false,
        "type": " string",
        "isCollection": false,
        "descr": "This property points to the preview image for the web part. The base implementation returns undefined. Web parts \nthat want to provide a valid preview image url need to override this API. The preview image url can be used to \ncreate a preview of the web part or of the page on which the web part is present. \n"
      },
      "properties": {
        "dataType": "TProperties",
        "accessModifier": "protected",
        "isOptional": false,
        "type": " TProperties",
        "isCollection": false,
        "descr": "This property is the pointer to the custom property bag of the web part. \n"
      },
      "propertyPaneSettings": {
        "dataType": "IPropertyPaneSettings",
        "accessModifier": "protected",
        "isOptional": false,
        "type": " IPropertyPaneSettings",
        "isCollection": false,
        "descr": ""
      },
      "renderedFromDefaultProperties": {
        "dataType": "boolean",
        "accessModifier": "protected",
        "isOptional": false,
        "type": " boolean",
        "isCollection": false,
        "descr": "This property indicates whether the web part was rendered from the default properties,as opposed to using \nserialized state from the last time that the web part was saved. \n"
      },
      "renderedOnce": {
        "dataType": "boolean",
        "accessModifier": "protected",
        "isOptional": false,
        "type": " boolean",
        "isCollection": false,
        "descr": "This property indicates whether the web part has been rendered once or not. After the first time rendering, \nthe value of this property is always true. Till a full re-render of the web part happens. \n"
      }
    },
    "methods": {
      "constructor~47573": {
        "accessModifier": "public",
        "signature": "constructor(ctx: IWebPartContext)",
        "isStatic": false,
        "isOptional": false,
        "descr": " \ne.g. \nconstructor(conext: IWebPartContext) { \nsuper(context); \n. \n. class specific constructor code .. \n}",
        "genericType": null,
        "returnType": "IWebPartContext",
        "returnDescr": null,
        "params": [
          {
            "name": "ctx",
            "dataType": "IWebPartContext",
            "descr": "",
            "isOptional": false
          }
        ]
      },
      "clearError~58241": {
        "accessModifier": "protected",
        "signature": "protected clearError(): void",
        "isStatic": false,
        "isOptional": false,
        "descr": "This API should be used to clear the error message from the web part display area.",
        "genericType": null,
        "returnType": "void",
        "returnDescr": null,
        "params": []
      },
      "configureStart~44939": {
        "accessModifier": "protected",
        "signature": "protected configureStart(refreshOnly?: boolean): void",
        "isStatic": false,
        "isOptional": false,
        "descr": "if it is not already open.",
        "genericType": null,
        "returnType": "void",
        "returnDescr": null,
        "params": [
          {
            "name": "refreshOnly",
            "dataType": "boolean",
            "descr": "",
            "isOptional": true
          }
        ]
      },
      "deserialize~22810": {
        "accessModifier": "protected",
        "signature": "protected deserialize(data: IWebPartData): TProperties",
        "isStatic": false,
        "isOptional": false,
        "descr": "",
        "genericType": null,
        "returnType": "TProperties",
        "returnDescr": null,
        "params": [
          {
            "name": "data",
            "dataType": "IWebPartData",
            "descr": "",
            "isOptional": false
          }
        ]
      },
      "dispose~60837": {
        "accessModifier": "protected",
        "signature": "protected dispose(): void",
        "isStatic": false,
        "isOptional": false,
        "descr": "This API is called at the end of the web part lifecycle. It should be overridden to dispose any \nresources that the web part is holding onto.",
        "genericType": null,
        "returnType": "void",
        "returnDescr": null,
        "params": []
      },
      "onBeforeSerialize~19066": {
        "accessModifier": "protected",
        "signature": "protected onBeforeSerialize(): IHtmlProperties",
        "isStatic": false,
        "isOptional": false,
        "descr": "the documentation of IHtmlProperties interface for more details.",
        "genericType": null,
        "returnType": "IHtmlProperties",
        "returnDescr": null,
        "params": []
      },
      "onDisplayModeChanged~39655": {
        "accessModifier": "protected",
        "signature": "protected onDisplayModeChanged(oldDisplayMode: DisplayMode): void",
        "isStatic": false,
        "isOptional": false,
        "descr": "",
        "genericType": null,
        "returnType": "void",
        "returnDescr": null,
        "params": [
          {
            "name": "oldDisplayMode",
            "dataType": "DisplayMode",
            "descr": "",
            "isOptional": false
          }
        ]
      },
      "onInit<T>~48288": {
        "accessModifier": "protected",
        "signature": "protected onInit < T >(): Promise<T>",
        "isStatic": false,
        "isOptional": false,
        "descr": "This API should be overridden to perform long running operations e.g. data fetching from a remote service before \nthe initial rendering of the web part. The loading indicator is displayed during the lifetime of this method. \nThis API is called only once during the lifecycle of a web part.",
        "genericType": "T",
        "returnType": "Promise<T>",
        "returnDescr": null,
        "params": []
      },
      "onPropertyChange~77455": {
        "accessModifier": "protected",
        "signature": "protected onPropertyChange(propertyPath: string,newValue: any): void",
        "isStatic": false,
        "isOptional": false,
        "descr": "This API is invoked on property changes in the PropertyPane when the PropertyPane is being used in Reactive mode. \nThe base implementation of this API updates the web part property bag and re-render the web part. This API also \ninvokes the web part host's setDirty API. \n",
        "genericType": null,
        "returnType": "void",
        "returnDescr": null,
        "params": [
          {
            "name": "propertyPath",
            "dataType": "string",
            "descr": "",
            "isOptional": false
          },
          {
            "name": "newValue",
            "dataType": "any",
            "descr": "",
            "isOptional": false
          }
        ]
      },
      "onPropertyConfigurationComplete~26715": {
        "accessModifier": "protected",
        "signature": "protected onPropertyConfigurationComplete(): void",
        "isStatic": false,
        "isOptional": false,
        "descr": "This API is called when the current web part configuration process is completed. ConfigurationComplete event \nis fired when user switches between web parts while the PropertyPane is open, and this event handler is called \nfor the previously selected web part. \n",
        "genericType": null,
        "returnType": "void",
        "returnDescr": null,
        "params": []
      },
      "onPropertyPaneRendered~72219": {
        "accessModifier": "protected",
        "signature": "protected onPropertyPaneRendered(): void",
        "isStatic": false,
        "isOptional": false,
        "descr": "This API is involed when the PropertyPane is rendered.",
        "genericType": null,
        "returnType": "void",
        "returnDescr": null,
        "params": []
      },
      "onPropertyPaneSave~63997": {
        "accessModifier": "protected",
        "signature": "protected onPropertyPaneSave(): void",
        "isStatic": false,
        "isOptional": false,
        "descr": "this API is invoked when the the changes are applied on the PropertyPane when the PropertyPane is used in \nNon-Reactive mode. This API is not invoked when the PropertyPane is used in Reactive mode.",
        "genericType": null,
        "returnType": "void",
        "returnDescr": null,
        "params": []
      },
      "render~43359": {
        "accessModifier": "public",
        "signature": "public render(): void",
        "isStatic": false,
        "isOptional": false,
        "descr": "This API is called to render the web part. There is no base implementation of this API and the web part is \nrequired to override this API.",
        "genericType": null,
        "returnType": "void",
        "returnDescr": null,
        "params": []
      },
      "renderError~54437": {
        "accessModifier": "protected",
        "signature": "protected renderError(error: Error): void",
        "isStatic": false,
        "isOptional": false,
        "descr": "This API should be used to render an error message in the web part display area. Also logs the error message \nusing the trace logger. \n",
        "genericType": null,
        "returnType": "void",
        "returnDescr": null,
        "params": [
          {
            "name": "error",
            "dataType": "Error",
            "descr": "",
            "isOptional": false
          }
        ]
      }
    },
    "functions": {}
  },
  "MockWebPartContext": {
    "implementsExtendsName": null,
    "genericType": null,
    "descr": "",
    "properties": {
      "instanceId": {
        "dataType": "string = 'wpInstanceId'",
        "accessModifier": "public",
        "isOptional": false,
        "type": " string = 'wpInstanceId'",
        "isCollection": false,
        "descr": ""
      },
      "webPartTag": {
        "dataType": "string = 'WebPart.daf0b71c-6de8-4ef7-b511-faae7c388708.0ae4973a-70e3-451e-9f1f-3f25e5455a60'",
        "accessModifier": "public",
        "isOptional": false,
        "type": " string = 'WebPart.daf0b71c-6de8-4ef7-b511-faae7c388708.0ae4973a-70e3-451e-9f1f-3f25e5455a60'",
        "isCollection": false,
        "descr": ""
      }
    },
    "methods": {
      "domElementHTMLElement=document.createElement~18749": {
        "accessModifier": "public",
        "signature": "public domElement: HTMLElement = document.createElement('div')",
        "isStatic": false,
        "isOptional": false,
        "descr": "",
        "genericType": null,
        "returnType": "HTMLElement = document.createElement('div'",
        "returnDescr": null,
        "params": [
          {
            "name": "'div'",
            "descr": "",
            "isOptional": false
          }
        ]
      }
    },
    "functions": {}
  }
}