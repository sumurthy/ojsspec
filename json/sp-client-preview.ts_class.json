{
  "BaseClientSideWebPart": {
    "implementsExtendsName": "",
    "genericType": "TProperties",
    "descr": "This abstract class implements the the base functionality for a client side web part. Every client side web part \nneeds to inherit from this class. Along with the base functionality, this class provides some APIs that can be \nused by the web part. These APIs fall in two catagories. \n \nThe first category of APIs provide data and functionality. Example, the web part context (i.e. this.context). This \nAPI should be used to access contextual data relevant to this web part instance. \n \nThe second category of APIs provide a base implementation for the web part lifecycle and can be overridden for an \nupdated implementation. The render() API is the only API that is mandatory to be implemented/overridden by a web \npart. All other life cycle APIs have a base implementation and can be overridden based on the needs of the web part. \nPlease refer to the documentation of the individual APIs to make the right decision.",
    "properties": {
      "accessibleTitle": {
        "dataType": "string",
        "accessModifier": "protected",
        "isOptional": false,
        "readonly": true,
        "isCollection": false,
        "function": null,
        "returnType": null,
        "assignValue": null,
        "descr": "Constructor for the BaseClientSideWebPart class. \nIf a sub class overrides the constructor, it needs to call super(context) as the first line of its constructor. \n"
      },
      "context": {
        "dataType": "IWebPartContext",
        "accessModifier": "protected",
        "isOptional": false,
        "readonly": true,
        "isCollection": false,
        "function": null,
        "returnType": null,
        "assignValue": null,
        "descr": "Constructor for the BaseClientSideWebPart class. \nIf a sub class overrides the constructor, it needs to call super(context) as the first line of its constructor. \n"
      },
      "disableReactivePropertyChanges": {
        "dataType": "boolean",
        "accessModifier": "protected",
        "isOptional": false,
        "readonly": true,
        "isCollection": false,
        "function": null,
        "returnType": null,
        "assignValue": null,
        "descr": "Constructor for the BaseClientSideWebPart class. \nIf a sub class overrides the constructor, it needs to call super(context) as the first line of its constructor. \n"
      },
      "displayMode": {
        "dataType": "DisplayMode",
        "accessModifier": "protected",
        "isOptional": false,
        "readonly": true,
        "isCollection": false,
        "function": null,
        "returnType": null,
        "assignValue": null,
        "descr": "Constructor for the BaseClientSideWebPart class. \nIf a sub class overrides the constructor, it needs to call super(context) as the first line of its constructor. \n"
      },
      "domElement": {
        "dataType": "HTMLElement",
        "accessModifier": "protected",
        "isOptional": false,
        "readonly": true,
        "isCollection": false,
        "function": null,
        "returnType": null,
        "assignValue": null,
        "descr": "Constructor for the BaseClientSideWebPart class. \nIf a sub class overrides the constructor, it needs to call super(context) as the first line of its constructor. \n"
      },
      "previewImageUrl": {
        "dataType": "string",
        "accessModifier": "protected",
        "isOptional": false,
        "readonly": true,
        "isCollection": false,
        "function": null,
        "returnType": null,
        "assignValue": null,
        "descr": "Constructor for the BaseClientSideWebPart class. \nIf a sub class overrides the constructor, it needs to call super(context) as the first line of its constructor. \n"
      },
      "properties": {
        "dataType": "TProperties",
        "accessModifier": "protected",
        "isOptional": false,
        "readonly": true,
        "isCollection": false,
        "function": null,
        "returnType": null,
        "assignValue": null,
        "descr": "Constructor for the BaseClientSideWebPart class. \nIf a sub class overrides the constructor, it needs to call super(context) as the first line of its constructor. \n"
      },
      "propertyPaneSettings": {
        "dataType": "IPropertyPaneSettings",
        "accessModifier": "protected",
        "isOptional": false,
        "readonly": true,
        "isCollection": false,
        "function": null,
        "returnType": null,
        "assignValue": null,
        "descr": "Constructor for the BaseClientSideWebPart class. \nIf a sub class overrides the constructor, it needs to call super(context) as the first line of its constructor. \n"
      },
      "renderedFromDefaultProperties": {
        "dataType": "boolean",
        "accessModifier": "protected",
        "isOptional": false,
        "readonly": true,
        "isCollection": false,
        "function": null,
        "returnType": null,
        "assignValue": null,
        "descr": "Constructor for the BaseClientSideWebPart class. \nIf a sub class overrides the constructor, it needs to call super(context) as the first line of its constructor. \n"
      },
      "renderedOnce": {
        "dataType": "boolean",
        "accessModifier": "protected",
        "isOptional": false,
        "readonly": true,
        "isCollection": false,
        "function": null,
        "returnType": null,
        "assignValue": null,
        "descr": "Constructor for the BaseClientSideWebPart class. \nIf a sub class overrides the constructor, it needs to call super(context) as the first line of its constructor. \n"
      }
    },
    "functions": {},
    "methods": {
      "constructor~whnw9": {
        "accessModifier": "public",
        "signature": "constructor(ctx: IWebPartContext)",
        "isStatic": false,
        "isOptional": false,
        "descr": "Constructor for the BaseClientSideWebPart class. \nIf a sub class overrides the constructor, it needs to call super(context) as the first line of its constructor. \n",
        "genericType": null,
        "returnType": "BaseClientSideWebPart",
        "returnDescr": "",
        "params": [
          {
            "name": "ctx",
            "dataType": "IWebPartContext",
            "isOptional": false,
            "descr": ""
          }
        ]
      },
      "clearError~kzpk9": {
        "accessModifier": "protected",
        "signature": "clearError(): void",
        "isStatic": false,
        "isOptional": false,
        "descr": "Constructor for the BaseClientSideWebPart class. \nIf a sub class overrides the constructor, it needs to call super(context) as the first line of its constructor. \n",
        "genericType": null,
        "returnType": "void",
        "returnDescr": "",
        "params": []
      },
      "configureStart~MnWI9": {
        "accessModifier": "protected",
        "signature": "configureStart(refreshOnly?: boolean): void",
        "isStatic": false,
        "isOptional": false,
        "descr": "Constructor for the BaseClientSideWebPart class. \nIf a sub class overrides the constructor, it needs to call super(context) as the first line of its constructor. \n",
        "genericType": null,
        "returnType": "void",
        "returnDescr": "",
        "params": [
          {
            "name": "refreshOnly",
            "dataType": "boolean",
            "isOptional": true,
            "descr": ""
          }
        ]
      },
      "deserialize~bHrU9": {
        "accessModifier": "protected",
        "signature": "deserialize(data: IWebPartData): TProperties",
        "isStatic": false,
        "isOptional": false,
        "descr": "Constructor for the BaseClientSideWebPart class. \nIf a sub class overrides the constructor, it needs to call super(context) as the first line of its constructor. \n",
        "genericType": null,
        "returnType": "TProperties",
        "returnDescr": "- web part property bag. \n",
        "params": [
          {
            "name": "data",
            "dataType": "IWebPartData",
            "isOptional": false,
            "descr": "- web part persisted data."
          }
        ]
      },
      "dispose~ye9M9": {
        "accessModifier": "protected",
        "signature": "dispose(): void",
        "isStatic": false,
        "isOptional": false,
        "descr": "Constructor for the BaseClientSideWebPart class. \nIf a sub class overrides the constructor, it needs to call super(context) as the first line of its constructor. \n",
        "genericType": null,
        "returnType": "void",
        "returnDescr": "- web part property bag. \n",
        "params": []
      },
      "onBeforeSerialize~I7HE9": {
        "accessModifier": "protected",
        "signature": "onBeforeSerialize(): IHtmlProperties",
        "isStatic": false,
        "isOptional": false,
        "descr": "Constructor for the BaseClientSideWebPart class. \nIf a sub class overrides the constructor, it needs to call super(context) as the first line of its constructor. \n",
        "genericType": null,
        "returnType": "IHtmlProperties",
        "returnDescr": "- reference to searchable properties and properties that need link fixup. Please read \nthe documentation of IHtmlProperties interface for more details.",
        "params": []
      },
      "onDisplayModeChanged~G9TY9": {
        "accessModifier": "protected",
        "signature": "onDisplayModeChanged(oldDisplayMode: DisplayMode): void",
        "isStatic": false,
        "isOptional": false,
        "descr": "Constructor for the BaseClientSideWebPart class. \nIf a sub class overrides the constructor, it needs to call super(context) as the first line of its constructor. \n",
        "genericType": null,
        "returnType": "void",
        "returnDescr": "- reference to searchable properties and properties that need link fixup. Please read \nthe documentation of IHtmlProperties interface for more details.",
        "params": [
          {
            "name": "oldDisplayMode",
            "dataType": "DisplayMode",
            "isOptional": false,
            "descr": "- The old display mode. \n"
          }
        ]
      },
      "onInit<T>~Br489": {
        "accessModifier": "protected",
        "signature": "onInit<T>(): Promise<T>",
        "isStatic": false,
        "isOptional": false,
        "descr": "Constructor for the BaseClientSideWebPart class. \nIf a sub class overrides the constructor, it needs to call super(context) as the first line of its constructor. \n",
        "genericType": "T",
        "returnType": "Promise<T>",
        "returnDescr": "- reference to searchable properties and properties that need link fixup. Please read \nthe documentation of IHtmlProperties interface for more details.",
        "params": []
      },
      "onPropertyChange~OyJc9": {
        "accessModifier": "protected",
        "signature": "onPropertyChange(propertyPath: string,newValue: any): void",
        "isStatic": false,
        "isOptional": false,
        "descr": "Constructor for the BaseClientSideWebPart class. \nIf a sub class overrides the constructor, it needs to call super(context) as the first line of its constructor. \n",
        "genericType": null,
        "returnType": "void",
        "returnDescr": "- reference to searchable properties and properties that need link fixup. Please read \nthe documentation of IHtmlProperties interface for more details.",
        "params": [
          {
            "name": "propertyPath",
            "dataType": "string",
            "isOptional": false,
            "descr": "- JSON path of the property in the property bag."
          },
          {
            "name": "newValue",
            "dataType": "any",
            "isOptional": false,
            "descr": "- New value of the property."
          }
        ]
      },
      "onPropertyConfigurationComplete~7EQI9": {
        "accessModifier": "protected",
        "signature": "onPropertyConfigurationComplete(): void",
        "isStatic": false,
        "isOptional": false,
        "descr": "Constructor for the BaseClientSideWebPart class. \nIf a sub class overrides the constructor, it needs to call super(context) as the first line of its constructor. \n",
        "genericType": null,
        "returnType": "void",
        "returnDescr": "- reference to searchable properties and properties that need link fixup. Please read \nthe documentation of IHtmlProperties interface for more details.",
        "params": []
      },
      "onPropertyPaneRendered~Mmik9": {
        "accessModifier": "protected",
        "signature": "onPropertyPaneRendered(): void",
        "isStatic": false,
        "isOptional": false,
        "descr": "Constructor for the BaseClientSideWebPart class. \nIf a sub class overrides the constructor, it needs to call super(context) as the first line of its constructor. \n",
        "genericType": null,
        "returnType": "void",
        "returnDescr": "- reference to searchable properties and properties that need link fixup. Please read \nthe documentation of IHtmlProperties interface for more details.",
        "params": []
      },
      "onPropertyPaneSave~ZYuc9": {
        "accessModifier": "protected",
        "signature": "onPropertyPaneSave(): void",
        "isStatic": false,
        "isOptional": false,
        "descr": "Constructor for the BaseClientSideWebPart class. \nIf a sub class overrides the constructor, it needs to call super(context) as the first line of its constructor. \n",
        "genericType": null,
        "returnType": "void",
        "returnDescr": "- reference to searchable properties and properties that need link fixup. Please read \nthe documentation of IHtmlProperties interface for more details.",
        "params": []
      },
      "render~tsG49": {
        "accessModifier": "public",
        "signature": "render(): void",
        "isStatic": false,
        "isOptional": false,
        "descr": "Constructor for the BaseClientSideWebPart class. \nIf a sub class overrides the constructor, it needs to call super(context) as the first line of its constructor. \n",
        "genericType": null,
        "returnType": "void",
        "returnDescr": "- reference to searchable properties and properties that need link fixup. Please read \nthe documentation of IHtmlProperties interface for more details.",
        "params": []
      },
      "renderError~tgrU9": {
        "accessModifier": "protected",
        "signature": "renderError(error: Error): void",
        "isStatic": false,
        "isOptional": false,
        "descr": "Constructor for the BaseClientSideWebPart class. \nIf a sub class overrides the constructor, it needs to call super(context) as the first line of its constructor. \n",
        "genericType": null,
        "returnType": "void",
        "returnDescr": "- reference to searchable properties and properties that need link fixup. Please read \nthe documentation of IHtmlProperties interface for more details.",
        "params": [
          {
            "name": "error",
            "dataType": "Error",
            "isOptional": false,
            "descr": "- An error object containing the error message to render."
          }
        ]
      }
    },
    "types": {},
    "variables": {},
    "modules": {},
    "objects": {}
  },
  "MockWebPartContext": {
    "implementsExtendsName": "",
    "genericType": null,
    "descr": "",
    "properties": {
      "basicHttpClient": {
        "dataType": "BasicHttpClient",
        "accessModifier": "public",
        "isOptional": false,
        "readonly": false,
        "isCollection": false,
        "function": null,
        "returnType": null,
        "assignValue": "{} as any",
        "descr": ""
      },
      "configureStart": {
        "dataType": "function",
        "accessModifier": "public",
        "isOptional": false,
        "readonly": false,
        "isCollection": "",
        "function": "(id: string,propertyPaneState?: PropertyPaneState)",
        "returnType": "void",
        "assignValue": "{} as any",
        "descr": ""
      },
      "domElement": {
        "dataType": "HTMLElement",
        "accessModifier": "public",
        "isOptional": false,
        "readonly": false,
        "isCollection": false,
        "function": null,
        "returnType": null,
        "assignValue": "document.createElement('div')",
        "descr": ""
      },
      "environment": {
        "dataType": "Environment",
        "accessModifier": "public",
        "isOptional": false,
        "readonly": false,
        "isCollection": false,
        "function": null,
        "returnType": null,
        "assignValue": "{} as any",
        "descr": ""
      },
      "eventAggregator": {
        "dataType": "IEventAggregator",
        "accessModifier": "public",
        "isOptional": false,
        "readonly": false,
        "isCollection": false,
        "function": null,
        "returnType": null,
        "assignValue": "{} as any",
        "descr": ""
      },
      "host": {
        "dataType": "IWebPartHost",
        "accessModifier": "public",
        "isOptional": false,
        "readonly": false,
        "isCollection": false,
        "function": null,
        "returnType": null,
        "assignValue": "{} as any",
        "descr": ""
      },
      "httpClient": {
        "dataType": "HttpClient",
        "accessModifier": "public",
        "isOptional": false,
        "readonly": false,
        "isCollection": false,
        "function": null,
        "returnType": null,
        "assignValue": "{} as any",
        "descr": ""
      },
      "instanceId": {
        "dataType": "string",
        "accessModifier": "public",
        "isOptional": false,
        "readonly": false,
        "isCollection": false,
        "function": null,
        "returnType": null,
        "assignValue": "'wpInstanceId'",
        "descr": ""
      },
      "manifest": {
        "dataType": "IClientSideWebPartManifestInstance<{}>",
        "accessModifier": "public",
        "isOptional": false,
        "readonly": false,
        "isCollection": false,
        "function": null,
        "returnType": null,
        "assignValue": "new MockWebPartManifestInstance()",
        "descr": ""
      },
      "pageContext": {
        "dataType": "PageContext",
        "accessModifier": "public",
        "isOptional": false,
        "readonly": false,
        "isCollection": false,
        "function": null,
        "returnType": null,
        "assignValue": "{} as any",
        "descr": ""
      },
      "serviceScope": {
        "dataType": "ServiceScope",
        "accessModifier": "public",
        "isOptional": false,
        "readonly": false,
        "isCollection": false,
        "function": null,
        "returnType": null,
        "assignValue": "{} as any",
        "descr": ""
      },
      "statusRenderer": {
        "dataType": "IClientSideWebPartStatusRenderer",
        "accessModifier": "public",
        "isOptional": false,
        "readonly": false,
        "isCollection": false,
        "function": null,
        "returnType": null,
        "assignValue": "{} as any",
        "descr": ""
      },
      "webPartTag": {
        "dataType": "string",
        "accessModifier": "public",
        "isOptional": false,
        "readonly": false,
        "isCollection": false,
        "function": null,
        "returnType": null,
        "assignValue": "'WebPart.daf0b71c-6de8-4ef7-b511-faae7c388708.0ae4973a-70e3-451e-9f1f-3f25e5455a60'",
        "descr": ""
      }
    },
    "functions": {},
    "methods": {},
    "types": {},
    "variables": {},
    "modules": {},
    "objects": {}
  }
}