{
  "BaseClientSideWebPart": {
    "implementsExtendsName": "",
    "genericType": "TProperties",
    "descr": "Please refer to the documentation of the individual APIs to make the right decision. \nThis abstract class implements the the base functionality for a client side web part. Every client side web part \nneeds to inherit from this class. Along with the base functionality, this class provides some APIs that can be \nused by the web part. These APIs fall in two catagories. \n \nThe first category of APIs provide data and functionality. Example, the web part context (i.e. this.context). This \nAPI should be used to access contextual data relevant to this web part instance. \n \nThe second category of APIs provide a base implementation for the web part lifecycle and can be overridden for an \nupdated implementation. The render() API is the only API that is mandatory to be implemented/overridden by a web \npart. All other life cycle APIs have a base implementation and can be overridden based on the needs of the web part. \nPlease refer to the documentation of the individual APIs to make the right decision.",
    "properties": {
      "protected": {
        "dataType": "boolean",
        "accessModifier": null,
        "isOptional": false,
        "readonly": true,
        "function": null,
        "returnType": null,
        "assignValue": null,
        "isCollection": false,
        "descr": " \nThis property indicates whether the web part has been rendered once or not. After the first time rendering, \nthe value of this property is always true. Till a full re-render of the web part happens. \n"
      }
    },
    "functions": {},
    "methods": {
      "constructor~3EGg9": {
        "accessModifier": "public",
        "signature": "constructor(ctx: IWebPartContext)",
        "isStatic": false,
        "isOptional": false,
        "descr": " \nConstructor for the BaseClientSideWebPart class. \nIf a sub class overrides the constructor, it needs to call super(context) as the first line of its constructor. \n",
        "genericType": null,
        "returnType": "IWebPartContext",
        "returnDescr": "",
        "params": [
          {
            "name": "ctx",
            "dataType": "IWebPartContext",
            "isOptional": false,
            "descr": ""
          }
        ]
      },
      "clearError~XLFc9": {
        "accessModifier": "protected",
        "signature": "clearError(): void",
        "isStatic": false,
        "isOptional": false,
        "descr": "This API should be used to clear the error message from the web part display area. \nThis API should be used to clear the error message from the web part display area.",
        "genericType": null,
        "returnType": "void",
        "returnDescr": "",
        "params": []
      },
      "configureStart~3kKs9": {
        "accessModifier": "protected",
        "signature": "configureStart(refreshOnly?: boolean): void",
        "isStatic": false,
        "isOptional": false,
        "descr": " \nThis API should be used to invoke the PropertyPane to help configure the web part. \n",
        "genericType": null,
        "returnType": "void",
        "returnDescr": "",
        "params": [
          {
            "name": "refreshOnly",
            "dataType": "boolean",
            "isOptional": true,
            "descr": ""
          }
        ]
      },
      "deserialize~n2e89": {
        "accessModifier": "protected",
        "signature": "deserialize(data: IWebPartData): TProperties",
        "isStatic": false,
        "isOptional": false,
        "descr": " \nThis API is called once during the lifetime of the web part during the intial render and just before the onInit \nAPI call. The purpose of this API is to help a web part developer deserialize the web part data and manage the \nversioning of their data as the web part code evolves. The web part data may have been persisted with an older \nor newer version of the web part code. This API gives the web part developer an opportunity to re-structure their \ndata to the appropriate data schema. The persisted data contains the version number information. That information \ncan be used to make decisions on how to re-structure the data. \n",
        "genericType": null,
        "returnType": "TProperties",
        "returnDescr": "- web part property bag. \nThis API is called once during the lifetime of the web part during the intial render and just before the onInit \nAPI call. The purpose of this API is to help a web part developer deserialize the web part data and manage the \nversioning of their data as the web part code evolves. The web part data may have been persisted with an older \nor newer version of the web part code. This API gives the web part developer an opportunity to re-structure their \ndata to the appropriate data schema. The persisted data contains the version number information. That information \ncan be used to make decisions on how to re-structure the data. \n",
        "params": [
          {
            "name": "data",
            "dataType": "IWebPartData",
            "isOptional": false,
            "descr": "- web part persisted data. \nThis API is called once during the lifetime of the web part during the intial render and just before the onInit \nAPI call. The purpose of this API is to help a web part developer deserialize the web part data and manage the \nversioning of their data as the web part code evolves. The web part data may have been persisted with an older \nor newer version of the web part code. This API gives the web part developer an opportunity to re-structure their \ndata to the appropriate data schema. The persisted data contains the version number information. That information \ncan be used to make decisions on how to re-structure the data. \n"
          }
        ]
      },
      "dispose~Xs8Y9": {
        "accessModifier": "protected",
        "signature": "dispose(): void",
        "isStatic": false,
        "isOptional": false,
        "descr": "resources that the web part is holding onto. \nThis API is called at the end of the web part lifecycle. It should be overridden to dispose any \nresources that the web part is holding onto.",
        "genericType": null,
        "returnType": "void",
        "returnDescr": "",
        "params": []
      },
      "onBeforeSerialize~jLOk9": {
        "accessModifier": "protected",
        "signature": "onBeforeSerialize(): IHtmlProperties",
        "isStatic": false,
        "isOptional": false,
        "descr": " \nThis API is called before a web part is serialized. The default implementation is a no-op. A web part developer \nis expected to override this API when the web part's state is not fully reflected in the property bag i.e. \nthis.properties. In the overridden method, the web part developer is expected to update the state of the web \npart property bag. This way the web part serialization process will use the upto date state of the web part. \n",
        "genericType": null,
        "returnType": "IHtmlProperties",
        "returnDescr": "- reference to searchable properties and properties that need link fixup. Please read \nThis API is called before a web part is serialized. The default implementation is a no-op. A web part developer \nis expected to override this API when the web part's state is not fully reflected in the property bag i.e. \nthis.properties. In the overridden method, the web part developer is expected to update the state of the web \npart property bag. This way the web part serialization process will use the upto date state of the web part. \n",
        "params": []
      },
      "onDisplayModeChanged~l3vU9": {
        "accessModifier": "protected",
        "signature": "onDisplayModeChanged(oldDisplayMode: DisplayMode): void",
        "isStatic": false,
        "isOptional": false,
        "descr": " \nThis API is called when the display mode of a web part is changed. The default implementation of this API calls \nthe web part render method to re-render the web part with the new display mode. If a web part developer does not \nwant a full re-render to happen on display mode change, they can override this API and perform specific updates \nto the web part DOM to switch its display mode. \n",
        "genericType": null,
        "returnType": "void",
        "returnDescr": "",
        "params": [
          {
            "name": "oldDisplayMode",
            "dataType": "DisplayMode",
            "isOptional": false,
            "descr": "- The old display mode. \nThis API is called when the display mode of a web part is changed. The default implementation of this API calls \nthe web part render method to re-render the web part with the new display mode. If a web part developer does not \nwant a full re-render to happen on display mode change, they can override this API and perform specific updates \nto the web part DOM to switch its display mode. \n"
          }
        ]
      },
      "onInit<T>~mxes9": {
        "accessModifier": "protected",
        "signature": "onInit<T>(): Promise<T>",
        "isStatic": false,
        "isOptional": false,
        "descr": "This API is called only once during the lifecycle of a web part. \nThis API should be overridden to perform long running operations e.g. data fetching from a remote service before \nthe initial rendering of the web part. The loading indicator is displayed during the lifetime of this method. \nThis API is called only once during the lifecycle of a web part.",
        "genericType": "T",
        "returnType": "Promise<T>",
        "returnDescr": "",
        "params": []
      },
      "onPropertyChange~Xdzg9": {
        "accessModifier": "protected",
        "signature": "onPropertyChange(propertyPath: string,newValue: any): void",
        "isStatic": false,
        "isOptional": false,
        "descr": " \nThis API is invoked on property changes in the PropertyPane when the PropertyPane is being used in Reactive mode. \nThe base implementation of this API updates the web part property bag and re-render the web part. This API also \ninvokes the web part host's setDirty API. \n",
        "genericType": null,
        "returnType": "void",
        "returnDescr": "",
        "params": [
          {
            "name": "propertyPath",
            "dataType": "string",
            "isOptional": false,
            "descr": "- JSON path of the property in the property bag. \nThis API is invoked on property changes in the PropertyPane when the PropertyPane is being used in Reactive mode. \nThe base implementation of this API updates the web part property bag and re-render the web part. This API also \ninvokes the web part host's setDirty API. \n"
          },
          {
            "name": "newValue",
            "dataType": "any",
            "isOptional": false,
            "descr": "- New value of the property. \nThis API is invoked on property changes in the PropertyPane when the PropertyPane is being used in Reactive mode. \nThe base implementation of this API updates the web part property bag and re-render the web part. This API also \ninvokes the web part host's setDirty API. \n"
          }
        ]
      },
      "onPropertyConfigurationComplete~64o89": {
        "accessModifier": "protected",
        "signature": "onPropertyConfigurationComplete(): void",
        "isStatic": false,
        "isOptional": false,
        "descr": " \nThis API is called when the current web part configuration process is completed. ConfigurationComplete event \nis fired when user switches between web parts while the PropertyPane is open, and this event handler is called \nfor the previously selected web part. \n",
        "genericType": null,
        "returnType": "void",
        "returnDescr": "",
        "params": []
      },
      "onPropertyPaneRendered~9zCU9": {
        "accessModifier": "protected",
        "signature": "onPropertyPaneRendered(): void",
        "isStatic": false,
        "isOptional": false,
        "descr": "This API is involed when the PropertyPane is rendered. \nThis API is involed when the PropertyPane is rendered.",
        "genericType": null,
        "returnType": "void",
        "returnDescr": "",
        "params": []
      },
      "onPropertyPaneSave~Qdfc9": {
        "accessModifier": "protected",
        "signature": "onPropertyPaneSave(): void",
        "isStatic": false,
        "isOptional": false,
        "descr": "Non-Reactive mode. This API is not invoked when the PropertyPane is used in Reactive mode. \nthis API is invoked when the the changes are applied on the PropertyPane when the PropertyPane is used in \nNon-Reactive mode. This API is not invoked when the PropertyPane is used in Reactive mode.",
        "genericType": null,
        "returnType": "void",
        "returnDescr": "",
        "params": []
      },
      "render~u4mg9": {
        "accessModifier": "public",
        "signature": "render(): void",
        "isStatic": false,
        "isOptional": false,
        "descr": "required to override this API. \nThis API is called to render the web part. There is no base implementation of this API and the web part is \nrequired to override this API.",
        "genericType": null,
        "returnType": "void",
        "returnDescr": "",
        "params": []
      },
      "renderError~VXc09": {
        "accessModifier": "protected",
        "signature": "renderError(error: Error): void",
        "isStatic": false,
        "isOptional": false,
        "descr": " \nThis API should be used to render an error message in the web part display area. Also logs the error message \nusing the trace logger. \n",
        "genericType": null,
        "returnType": "void",
        "returnDescr": "",
        "params": [
          {
            "name": "error",
            "dataType": "Error",
            "isOptional": false,
            "descr": "- An error object containing the error message to render. \nThis API should be used to render an error message in the web part display area. Also logs the error message \nusing the trace logger. \n"
          }
        ]
      }
    },
    "types": {},
    "variables": {},
    "modules": {},
    "objects": {}
  },
  "MockWebPartContext": {
    "implementsExtendsName": "",
    "genericType": null,
    "descr": "",
    "properties": {
      "public": {
        "dataType": "string",
        "accessModifier": null,
        "isOptional": false,
        "readonly": false,
        "function": null,
        "returnType": null,
        "assignValue": "'WebPart.daf0b71c-6de8-4ef7-b511-faae7c388708.0ae4973a-70e3-451e-9f1f-3f25e5455a60'",
        "isCollection": false,
        "descr": ""
      }
    },
    "functions": {},
    "methods": {},
    "types": {},
    "variables": {},
    "modules": {},
    "objects": {}
  }
}