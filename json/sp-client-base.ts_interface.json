{
  "IBasicHttpClientOptions": {
    "implementsExtendsName": "RequestInit",
    "genericType": null,
    "descr": "https: \nThis interface defines the options for the BasicHttpClient operations such as \nget(), post(), fetch(), etc. It is based on the whatwg API standard \nparameters that are documented here: \nhttps://fetch.spec.whatwg.org/",
    "properties": {
      "body": {
        "dataType": "BodyInit",
        "accessModifier": null,
        "isOptional": true,
        "readonly": false,
        "function": null,
        "returnType": null,
        "assignValue": null,
        "isCollection": false,
        "descr": "https: \nThis interface defines the options for the BasicHttpClient operations such as \nget(), post(), fetch(), etc. It is based on the whatwg API standard \nparameters that are documented here: \nhttps://fetch.spec.whatwg.org/"
      },
      "cache": {
        "dataType": "string|RequestCache",
        "accessModifier": null,
        "isOptional": true,
        "readonly": false,
        "function": null,
        "returnType": null,
        "assignValue": null,
        "isCollection": false,
        "descr": "https: \nThis interface defines the options for the BasicHttpClient operations such as \nget(), post(), fetch(), etc. It is based on the whatwg API standard \nparameters that are documented here: \nhttps://fetch.spec.whatwg.org/"
      },
      "credentials": {
        "dataType": "string|RequestCredentials",
        "accessModifier": null,
        "isOptional": true,
        "readonly": false,
        "function": null,
        "returnType": null,
        "assignValue": null,
        "isCollection": false,
        "descr": "https: \nThis interface defines the options for the BasicHttpClient operations such as \nget(), post(), fetch(), etc. It is based on the whatwg API standard \nparameters that are documented here: \nhttps://fetch.spec.whatwg.org/"
      },
      "headers": {
        "dataType": "HeaderInit|{ [index: string]: string }",
        "accessModifier": null,
        "isOptional": true,
        "readonly": false,
        "function": null,
        "returnType": null,
        "assignValue": null,
        "isCollection": false,
        "descr": "https: \nThis interface defines the options for the BasicHttpClient operations such as \nget(), post(), fetch(), etc. It is based on the whatwg API standard \nparameters that are documented here: \nhttps://fetch.spec.whatwg.org/"
      },
      "method": {
        "dataType": "string",
        "accessModifier": null,
        "isOptional": true,
        "readonly": false,
        "function": null,
        "returnType": null,
        "assignValue": null,
        "isCollection": false,
        "descr": "https: \nThis interface defines the options for the BasicHttpClient operations such as \nget(), post(), fetch(), etc. It is based on the whatwg API standard \nparameters that are documented here: \nhttps://fetch.spec.whatwg.org/"
      },
      "mode": {
        "dataType": "string|RequestMode",
        "accessModifier": null,
        "isOptional": true,
        "readonly": false,
        "function": null,
        "returnType": null,
        "assignValue": null,
        "isCollection": false,
        "descr": "https: \nThis interface defines the options for the BasicHttpClient operations such as \nget(), post(), fetch(), etc. It is based on the whatwg API standard \nparameters that are documented here: \nhttps://fetch.spec.whatwg.org/"
      }
    },
    "functions": {},
    "methods": {},
    "types": {},
    "variables": {},
    "modules": {},
    "objects": {}
  },
  "IClientSideApplicationManifest": {
    "implementsExtendsName": "IClientSideComponentManifest",
    "genericType": null,
    "descr": "This is is the manifest for a client-side application. \nThis is is the manifest for a client-side application.",
    "properties": {
      "bootstrapModule": {
        "dataType": "string",
        "accessModifier": null,
        "isOptional": false,
        "readonly": false,
        "function": null,
        "returnType": null,
        "assignValue": null,
        "isCollection": false,
        "descr": "Represents the boot strap module link of client side application or webpart. \nRepresents the boot strap module link of client side application or webpart."
      },
      "cssLinks": {
        "dataType": "string",
        "accessModifier": null,
        "isOptional": false,
        "readonly": false,
        "function": null,
        "returnType": null,
        "assignValue": null,
        "isCollection": false,
        "descr": "Represents the fabric css components links. \nRepresents the fabric css components links."
      },
      "displayName": {
        "dataType": "string",
        "accessModifier": null,
        "isOptional": false,
        "readonly": false,
        "function": null,
        "returnType": null,
        "assignValue": null,
        "isCollection": false,
        "descr": "Represents display name of webpart. \nRepresents display name of webpart."
      },
      "id": {
        "dataType": "string",
        "accessModifier": null,
        "isOptional": false,
        "readonly": false,
        "function": null,
        "returnType": null,
        "assignValue": null,
        "isCollection": false,
        "descr": "Represents the application id. \nRepresents the application id."
      },
      "manifestVersion": {
        "dataType": "number",
        "accessModifier": null,
        "isOptional": false,
        "readonly": false,
        "function": null,
        "returnType": null,
        "assignValue": null,
        "isCollection": false,
        "descr": "Represents the manifest version. \nRepresents the manifest version."
      },
      "moduleName": {
        "dataType": "string",
        "accessModifier": null,
        "isOptional": false,
        "readonly": false,
        "function": null,
        "returnType": null,
        "assignValue": null,
        "isCollection": false,
        "descr": "Represents name of the module which loads application or webpart. \nRepresents name of the module which loads application or webpart."
      },
      "platformModule": {
        "dataType": "string",
        "accessModifier": null,
        "isOptional": false,
        "readonly": false,
        "function": null,
        "returnType": null,
        "assignValue": null,
        "isCollection": false,
        "descr": "Represents the platform js module link of client side application. \nRepresents the platform js module link of client side application."
      },
      "preloadClientSideComponents": {
        "dataType": "string",
        "accessModifier": null,
        "isOptional": false,
        "readonly": false,
        "function": null,
        "returnType": null,
        "assignValue": null,
        "isCollection": false,
        "descr": "Represents client side components to be preloaded when loading \"this\" component. \nRepresents client side components to be preloaded when loading \"this\" component."
      },
      "shouldPreloadItem": {
        "dataType": "boolean",
        "accessModifier": null,
        "isOptional": false,
        "readonly": false,
        "function": null,
        "returnType": null,
        "assignValue": null,
        "isCollection": false,
        "descr": "Determines whether or not to prefetch the list item object \nDetermines whether or not to prefetch the list item object"
      },
      "shouldPreloadList": {
        "dataType": "boolean",
        "accessModifier": null,
        "isOptional": false,
        "readonly": false,
        "function": null,
        "returnType": null,
        "assignValue": null,
        "isCollection": false,
        "descr": "Determines whether or not to prefetch the list object \nDetermines whether or not to prefetch the list object"
      },
      "shouldPreloadQuickLaunch": {
        "dataType": "boolean",
        "accessModifier": null,
        "isOptional": false,
        "readonly": false,
        "function": null,
        "returnType": null,
        "assignValue": null,
        "isCollection": false,
        "descr": "Determines whether or not to prefetch the quick launch navigation menu items \nDetermines whether or not to prefetch the quick launch navigation menu items"
      },
      "shouldPreloadUser": {
        "dataType": "boolean",
        "accessModifier": null,
        "isOptional": false,
        "readonly": false,
        "function": null,
        "returnType": null,
        "assignValue": null,
        "isCollection": false,
        "descr": "Determines whether or not to prefetch the user object \nDetermines whether or not to prefetch the user object"
      },
      "shouldPreloadWeb": {
        "dataType": "boolean",
        "accessModifier": null,
        "isOptional": false,
        "readonly": false,
        "function": null,
        "returnType": null,
        "assignValue": null,
        "isCollection": false,
        "descr": "Determines whether or not to prefetch the web object \nDetermines whether or not to prefetch the web object"
      }
    },
    "functions": {},
    "methods": {},
    "types": {},
    "variables": {},
    "modules": {},
    "objects": {}
  },
  "IClientSideComponentManifest": {
    "implementsExtendsName": "",
    "genericType": null,
    "descr": "that represent the manifest for each kind of client-side component. \nThis is the base interface that is extended by the interfaces \nthat represent the manifest for each kind of client-side component.",
    "properties": {
      "bootstrapModule": {
        "dataType": "string",
        "accessModifier": null,
        "isOptional": false,
        "readonly": false,
        "function": null,
        "returnType": null,
        "assignValue": null,
        "isCollection": false,
        "descr": "Represents the boot strap module link of client side application or webpart. \nRepresents the boot strap module link of client side application or webpart."
      },
      "displayName": {
        "dataType": "string",
        "accessModifier": null,
        "isOptional": false,
        "readonly": false,
        "function": null,
        "returnType": null,
        "assignValue": null,
        "isCollection": false,
        "descr": "Represents display name of webpart. \nRepresents display name of webpart."
      },
      "id": {
        "dataType": "string",
        "accessModifier": null,
        "isOptional": false,
        "readonly": false,
        "function": null,
        "returnType": null,
        "assignValue": null,
        "isCollection": false,
        "descr": "Represents the application id. \nRepresents the application id."
      },
      "manifestVersion": {
        "dataType": "number",
        "accessModifier": null,
        "isOptional": false,
        "readonly": false,
        "function": null,
        "returnType": null,
        "assignValue": null,
        "isCollection": false,
        "descr": "Represents the manifest version. \nRepresents the manifest version."
      },
      "moduleName": {
        "dataType": "string",
        "accessModifier": null,
        "isOptional": false,
        "readonly": false,
        "function": null,
        "returnType": null,
        "assignValue": null,
        "isCollection": false,
        "descr": "Represents name of the module which loads application or webpart. \nRepresents name of the module which loads application or webpart."
      },
      "version": {
        "dataType": "string",
        "accessModifier": null,
        "isOptional": false,
        "readonly": false,
        "function": null,
        "returnType": null,
        "assignValue": null,
        "isCollection": false,
        "descr": "Represents the version of scripts. \nRepresents the version of scripts."
      }
    },
    "functions": {},
    "methods": {},
    "types": {},
    "variables": {},
    "modules": {},
    "objects": {}
  },
  "IDigestCache": {
    "implementsExtendsName": "",
    "genericType": null,
    "descr": "\"Complete basic operations using SharePoint 2013 REST endpoints\". \nIDigestCache is an internal service used by HttpClient to maintain a cache of request digests \nfor each SPWeb URL. A request digest is a security token that the SharePoint server requires for \nfor any REST write operation, specified via the \"X-RequestDigest\" HTTP header. It is obtained \nby calling the \"/_api/contextinfo\" REST endpoint, and expires after a server configurable amount \nof time. For more information, see the MSDN article \n\"Complete basic operations using SharePoint 2013 REST endpoints\".",
    "properties": {},
    "functions": {},
    "methods": {
      "addDigestToCache~dLbs9": {
        "accessModifier": "public",
        "signature": "addDigestToCache(webUrl: string,digestValue: string,expirationTimestamp: number): void",
        "isStatic": false,
        "isOptional": false,
        "descr": " \nInserts a specific request digest value into the cache. Normally this is unnecessary because \nthe framework will automatically issue a REST request to fetch the digest when necessary; \nhowever, in advanced scenarios addDigestToCache() can be used to avoid the overhead of the \nREST call. \n",
        "genericType": null,
        "returnType": "void",
        "returnDescr": "",
        "params": [
          {
            "name": "webUrl",
            "dataType": "string",
            "isOptional": false,
            "descr": "The URL of the SPWeb that the API call will be issued to. \nInserts a specific request digest value into the cache. Normally this is unnecessary because \nthe framework will automatically issue a REST request to fetch the digest when necessary; \nhowever, in advanced scenarios addDigestToCache() can be used to avoid the overhead of the \nREST call. \n"
          },
          {
            "name": "digestValue",
            "dataType": "string",
            "isOptional": false,
            "descr": "The digest value,which is an opaque that must be generated \nInserts a specific request digest value into the cache. Normally this is unnecessary because \nthe framework will automatically issue a REST request to fetch the digest when necessary; \nhowever, in advanced scenarios addDigestToCache() can be used to avoid the overhead of the \nREST call. \n"
          },
          {
            "name": "expirationTimestamp",
            "dataType": "number",
            "isOptional": false,
            "descr": "A future point in time,as measured by performance.now(),after which \nInserts a specific request digest value into the cache. Normally this is unnecessary because \nthe framework will automatically issue a REST request to fetch the digest when necessary; \nhowever, in advanced scenarios addDigestToCache() can be used to avoid the overhead of the \nREST call. \n"
          }
        ]
      },
      "clearAllDigests~oVNk9": {
        "accessModifier": "public",
        "signature": "clearAllDigests(): void",
        "isStatic": false,
        "isOptional": false,
        "descr": "Clears all values from the cache. \nClears all values from the cache.",
        "genericType": null,
        "returnType": "void",
        "returnDescr": "",
        "params": []
      },
      "clearDigest~HDFI9": {
        "accessModifier": "public",
        "signature": "clearDigest(webUrl: string): boolean",
        "isStatic": false,
        "isOptional": false,
        "descr": " \nClears the cached digest for the specified SPWeb URL. This operation is useful \ne.g. if an error indicates that a digest was invalidated prior to its expiration time. \n",
        "genericType": null,
        "returnType": "boolean",
        "returnDescr": "Returns true if a cache entry was found and deleted false otherwise. \nClears the cached digest for the specified SPWeb URL. This operation is useful \ne.g. if an error indicates that a digest was invalidated prior to its expiration time. \n",
        "params": [
          {
            "name": "webUrl",
            "dataType": "string",
            "isOptional": false,
            "descr": "The URL of the SPWeb whose digest should be cleared. \nClears the cached digest for the specified SPWeb URL. This operation is useful \ne.g. if an error indicates that a digest was invalidated prior to its expiration time. \n"
          }
        ]
      },
      "fetchDigest~dBvU9": {
        "accessModifier": "public",
        "signature": "fetchDigest(webUrl: string): Promise<string>",
        "isStatic": false,
        "isOptional": false,
        "descr": "an HTTP request obtains the digest,which will be added to the cache. \nReturns a digest string for the specified SPWeb URL. If the cache already contains a usable value, \nthe promise is fulfilled immediately. Otherwise, the promise will be pending and resolve after \nan HTTP request obtains the digest, which will be added to the cache.",
        "genericType": null,
        "returnType": "Promise<string>",
        "returnDescr": "A promise that is fulfilled with the digest value. \nReturns a digest string for the specified SPWeb URL. If the cache already contains a usable value, \nthe promise is fulfilled immediately. Otherwise, the promise will be pending and resolve after \nan HTTP request obtains the digest, which will be added to the cache.",
        "params": [
          {
            "name": "webUrl",
            "dataType": "string",
            "isOptional": false,
            "descr": "The URL of the SPWeb that the API call will be issued to. \nReturns a digest string for the specified SPWeb URL. If the cache already contains a usable value, \nthe promise is fulfilled immediately. Otherwise, the promise will be pending and resolve after \nan HTTP request obtains the digest, which will be added to the cache."
          }
        ]
      }
    },
    "types": {},
    "variables": {},
    "modules": {},
    "objects": {}
  },
  "IHttpClientOptions": {
    "implementsExtendsName": "IBasicHttpClientOptions",
    "genericType": null,
    "descr": "https: \nThis interface defines the options for the HttpClient operations such as \nget(), post(), fetch(), etc. It is based on the WHATWG API standard \nparameters that are documented here: \nhttps://fetch.spec.whatwg.org/",
    "properties": {
      "body": {
        "dataType": "BodyInit",
        "accessModifier": null,
        "isOptional": true,
        "readonly": false,
        "function": null,
        "returnType": null,
        "assignValue": null,
        "isCollection": false,
        "descr": "https: \nThis interface defines the options for the HttpClient operations such as \nget(), post(), fetch(), etc. It is based on the WHATWG API standard \nparameters that are documented here: \nhttps://fetch.spec.whatwg.org/"
      },
      "cache": {
        "dataType": "string|RequestCache",
        "accessModifier": null,
        "isOptional": true,
        "readonly": false,
        "function": null,
        "returnType": null,
        "assignValue": null,
        "isCollection": false,
        "descr": "https: \nThis interface defines the options for the HttpClient operations such as \nget(), post(), fetch(), etc. It is based on the WHATWG API standard \nparameters that are documented here: \nhttps://fetch.spec.whatwg.org/"
      },
      "credentials": {
        "dataType": "string|RequestCredentials",
        "accessModifier": null,
        "isOptional": true,
        "readonly": false,
        "function": null,
        "returnType": null,
        "assignValue": null,
        "isCollection": false,
        "descr": "https: \nThis interface defines the options for the HttpClient operations such as \nget(), post(), fetch(), etc. It is based on the WHATWG API standard \nparameters that are documented here: \nhttps://fetch.spec.whatwg.org/"
      },
      "headers": {
        "dataType": "HeaderInit|{ [index: string]: string }",
        "accessModifier": null,
        "isOptional": true,
        "readonly": false,
        "function": null,
        "returnType": null,
        "assignValue": null,
        "isCollection": false,
        "descr": "https: \nThis interface defines the options for the HttpClient operations such as \nget(), post(), fetch(), etc. It is based on the WHATWG API standard \nparameters that are documented here: \nhttps://fetch.spec.whatwg.org/"
      },
      "method": {
        "dataType": "string",
        "accessModifier": null,
        "isOptional": true,
        "readonly": false,
        "function": null,
        "returnType": null,
        "assignValue": null,
        "isCollection": false,
        "descr": "https: \nThis interface defines the options for the HttpClient operations such as \nget(), post(), fetch(), etc. It is based on the WHATWG API standard \nparameters that are documented here: \nhttps://fetch.spec.whatwg.org/"
      },
      "mode": {
        "dataType": "string|RequestMode",
        "accessModifier": null,
        "isOptional": true,
        "readonly": false,
        "function": null,
        "returnType": null,
        "assignValue": null,
        "isCollection": false,
        "descr": "https: \nThis interface defines the options for the HttpClient operations such as \nget(), post(), fetch(), etc. It is based on the WHATWG API standard \nparameters that are documented here: \nhttps://fetch.spec.whatwg.org/"
      },
      "webUrl": {
        "dataType": "string",
        "accessModifier": null,
        "isOptional": true,
        "readonly": false,
        "function": null,
        "returnType": null,
        "assignValue": null,
        "isCollection": false,
        "descr": "be explicitly specified using this option. \nFor a write operation, HttpClient will automatically add the \n\"X-RequestDigest\" header, which may need to be fetched using a seperate \nrequest such as \"https://example.com/sites/sample/_api/contextinfo\". \nTypically the SPWeb URL (\"https://example.com/sites/sample\" in this \nexample) can be guessed by looking for a reserved URL segment such \nas \"_api\" in the original REST query, however certain REST endpoints \ndo not contain a reserved URL segment; in this case, the webUrl can \nbe explicitly specified using this option."
      }
    },
    "functions": {},
    "methods": {},
    "types": {},
    "variables": {},
    "modules": {},
    "objects": {}
  },
  "IODataBasePermission": {
    "implementsExtendsName": "",
    "genericType": null,
    "descr": "Data used for creating a SPPermission object. \nData used for creating a SPPermission object.",
    "properties": {
      "High": {
        "dataType": "number",
        "accessModifier": null,
        "isOptional": false,
        "readonly": false,
        "function": null,
        "returnType": null,
        "assignValue": null,
        "isCollection": false,
        "descr": "Data used for creating a SPPermission object. \nData used for creating a SPPermission object."
      },
      "Low": {
        "dataType": "number",
        "accessModifier": null,
        "isOptional": false,
        "readonly": false,
        "function": null,
        "returnType": null,
        "assignValue": null,
        "isCollection": false,
        "descr": "Data used for creating a SPPermission object. \nData used for creating a SPPermission object."
      }
    },
    "functions": {},
    "methods": {},
    "types": {},
    "variables": {},
    "modules": {},
    "objects": {}
  },
  "IODataBatchOptions": {
    "implementsExtendsName": "",
    "genericType": null,
    "descr": "that affect the entire batch. \nThis interface is passed to the ODataBatch constructor. It specifies options \nthat affect the entire batch.",
    "properties": {
      "webUrl": {
        "dataType": "string",
        "accessModifier": null,
        "isOptional": true,
        "readonly": false,
        "function": null,
        "returnType": null,
        "assignValue": null,
        "isCollection": false,
        "descr": "using this option. \nODataBatch will need to perform its POST to an endpoint such as \n\"http://example.com/sites/sample/_api/$batch\". Typically the SPWeb URL \n(\"https://example.com/sites/sample\" in this example) can be guessed by \nlooking for a reserved URL segment such as \"_api\" in the first URL \npassed to fetch(), but if not, the webUrl can be explicitly specified \nusing this option."
      }
    },
    "functions": {},
    "methods": {},
    "types": {},
    "variables": {},
    "modules": {},
    "objects": {}
  },
  "IODataChangeToken": {
    "implementsExtendsName": "",
    "genericType": null,
    "descr": "Represents an OData SP.ChangeToken object. For more information about this object \nRepresents an OData SP.ChangeToken object. For more information about this object",
    "properties": {
      "StringValue": {
        "dataType": "string",
        "accessModifier": null,
        "isOptional": false,
        "readonly": false,
        "function": null,
        "returnType": null,
        "assignValue": null,
        "isCollection": false,
        "descr": "Example: { StringValue: \"13;9fb9199b-65f2-4a4a-b597-11d1a44422c1;635892156279130000;10721\" } \nExample: { StringValue: \"1;3;9fb9199b-65f2-4a4a-b597-11d1a44422c1;635892156279130000;10721\" }"
      }
    },
    "functions": {},
    "methods": {},
    "types": {},
    "variables": {},
    "modules": {},
    "objects": {}
  },
  "IODataContextWebInformation": {
    "implementsExtendsName": "",
    "genericType": null,
    "descr": "Represents an OData SP.ContextWebInformation object. For more information about this object \nRepresents an OData SP.ContextWebInformation object. For more information about this object",
    "properties": {
      "FormDigestTimeoutSeconds": {
        "dataType": "number",
        "accessModifier": null,
        "isOptional": false,
        "readonly": false,
        "function": null,
        "returnType": null,
        "assignValue": null,
        "isCollection": false,
        "descr": "Example: 1800 \nExample: 1800"
      },
      "FormDigestValue": {
        "dataType": "string",
        "accessModifier": null,
        "isOptional": false,
        "readonly": false,
        "function": null,
        "returnType": null,
        "assignValue": null,
        "isCollection": false,
        "descr": "Example: \"0x61B31CBF4C76C...B0,20 Jan 2016 02:24:43 -0000\" \nExample: \"0x61B31CBF4C76C...B0,20 Jan 2016 02:24:43 -0000\""
      },
      "LibraryVersion": {
        "dataType": "string",
        "accessModifier": null,
        "isOptional": false,
        "readonly": false,
        "function": null,
        "returnType": null,
        "assignValue": null,
        "isCollection": false,
        "descr": "Example: \"16.0.4919.3000\" \nExample: \"16.0.4919.3000\""
      },
      "SiteFullUrl": {
        "dataType": "string",
        "accessModifier": null,
        "isOptional": false,
        "readonly": false,
        "function": null,
        "returnType": null,
        "assignValue": null,
        "isCollection": false,
        "descr": "Example: \"http:\\u002f\\u002fexample.com\\u002fsites\\u002fPubSite\" \nExample: \"http:\\u002f\\u002fexample.com\\u002fsites\\u002fPubSite\""
      },
      "SupportedSchemaVersions": {
        "dataType": "string",
        "accessModifier": null,
        "isOptional": false,
        "readonly": false,
        "function": null,
        "returnType": null,
        "assignValue": null,
        "isCollection": false,
        "descr": "Example: [ \"14.0.0.0\",\"15.0.0.0\" ] \nExample: [ \"14.0.0.0\", \"15.0.0.0\" ]"
      },
      "WebFullUrl": {
        "dataType": "string",
        "accessModifier": null,
        "isOptional": false,
        "readonly": false,
        "function": null,
        "returnType": null,
        "assignValue": null,
        "isCollection": false,
        "descr": "Example: \"http:\\u002f\\u002fexample.com\\u002fsites\\u002fPubSite\" \nExample: \"http:\\u002f\\u002fexample.com\\u002fsites\\u002fPubSite\""
      }
    },
    "functions": {},
    "methods": {},
    "types": {},
    "variables": {},
    "modules": {},
    "objects": {}
  },
  "IODataNavigationNode": {
    "implementsExtendsName": "",
    "genericType": null,
    "descr": "https: \nRepresents an OData SP.NavigationNode object. \nhttps://msdn.microsoft.com/en-us/library/office/jj246311.aspx",
    "properties": {
      "Children": {
        "dataType": "IODataNavigationNode",
        "accessModifier": null,
        "isOptional": true,
        "readonly": false,
        "function": null,
        "returnType": null,
        "assignValue": null,
        "isCollection": false,
        "descr": "Gets or sets an array of Navigation Nodes that are children to the current node. \nGets or sets an array of Navigation Nodes that are children to the current node."
      },
      "Id": {
        "dataType": "number",
        "accessModifier": null,
        "isOptional": true,
        "readonly": false,
        "function": null,
        "returnType": null,
        "assignValue": null,
        "isCollection": false,
        "descr": "Gets a value that specifies the identifier for the navigation node. \nGets a value that specifies the identifier for the navigation node."
      },
      "IsDocLib": {
        "dataType": "boolean",
        "accessModifier": null,
        "isOptional": true,
        "readonly": false,
        "function": null,
        "returnType": null,
        "assignValue": null,
        "isCollection": false,
        "descr": ""
      },
      "IsExternal": {
        "dataType": "boolean",
        "accessModifier": null,
        "isOptional": true,
        "readonly": false,
        "function": null,
        "returnType": null,
        "assignValue": null,
        "isCollection": false,
        "descr": "corresponds to pages outside of the site collection. \nGets or sets a value that specifies whether the navigation node URL potentially \ncorresponds to pages outside of the site collection."
      },
      "IsVisible": {
        "dataType": "boolean",
        "accessModifier": null,
        "isOptional": true,
        "readonly": false,
        "function": null,
        "returnType": null,
        "assignValue": null,
        "isCollection": false,
        "descr": "Gets or sets a value that specifies if the node navigation link should be visible. \nGets or sets a value that specifies if the node navigation link should be visible."
      },
      "Title": {
        "dataType": "string",
        "accessModifier": null,
        "isOptional": true,
        "readonly": false,
        "function": null,
        "returnType": null,
        "assignValue": null,
        "isCollection": false,
        "descr": "Gets or sets a value that specifies the anchor text for the node navigation link. \nGets or sets a value that specifies the anchor text for the node navigation link."
      },
      "Url": {
        "dataType": "string",
        "accessModifier": null,
        "isOptional": true,
        "readonly": false,
        "function": null,
        "returnType": null,
        "assignValue": null,
        "isCollection": false,
        "descr": "relative or absolute form. \nGets or sets a value that specifies the URL to be stored with the navigation node. \nIt must be a URL of relative form if IsExternal is false. It must be a URL of \nrelative or absolute form."
      }
    },
    "functions": {},
    "methods": {},
    "types": {},
    "variables": {},
    "modules": {},
    "objects": {}
  },
  "IODataNavigationNodeCollection": {
    "implementsExtendsName": "",
    "genericType": null,
    "descr": "https: \nRepresents an OData Microsoft.SharePoint.Navigation.SPNavigation object. \nhttps://msdn.microsoft.com/en-us/library/office/ee557907.aspx",
    "properties": {
      "quickLaunch": {
        "dataType": "IODataNavigationNode",
        "accessModifier": null,
        "isOptional": false,
        "readonly": false,
        "function": null,
        "returnType": null,
        "assignValue": null,
        "isCollection": false,
        "descr": "the nodes in the Quick Launch area of the site. \nGets an SPNavigationNode object that contains \nthe nodes in the Quick Launch area of the site."
      },
      "topNav": {
        "dataType": "IODataNavigationNode",
        "accessModifier": null,
        "isOptional": false,
        "readonly": false,
        "function": null,
        "returnType": null,
        "assignValue": null,
        "isCollection": false,
        "descr": "for the website. \nGets an SPNavigationNode object that contains the nodes in the top link bar \nfor the website."
      }
    },
    "functions": {},
    "methods": {},
    "types": {},
    "variables": {},
    "modules": {},
    "objects": {}
  },
  "IODataWeb": {
    "implementsExtendsName": "",
    "genericType": null,
    "descr": "https: \nRepresents an OData SP.Web object. For more information about this object \nsee the MSDN documentation here: \nhttps://msdn.microsoft.com/en-us/library/office/jj860569.aspx",
    "properties": {
      "Created": {
        "dataType": "string",
        "accessModifier": null,
        "isOptional": true,
        "readonly": false,
        "function": null,
        "returnType": null,
        "assignValue": null,
        "isCollection": false,
        "descr": "Example: \"/Date(2016,0,20,12,58,7,0)/\" \nGets a value that specifies when the site was created. \nExample: \"/Date(2016,0,20,12,58,7,0)/\""
      },
      "CurrentChangeToken": {
        "dataType": "IODataChangeToken",
        "accessModifier": null,
        "isOptional": true,
        "readonly": false,
        "function": null,
        "returnType": null,
        "assignValue": null,
        "isCollection": false,
        "descr": "Represents the unique sequential location of a change within the change log. \nRepresents the unique sequential location of a change within the change log."
      },
      "CustomMasterUrl": {
        "dataType": "string",
        "accessModifier": null,
        "isOptional": true,
        "readonly": false,
        "function": null,
        "returnType": null,
        "assignValue": null,
        "isCollection": false,
        "descr": "Example: \"/sites/PubSite/_catalogs/masterpage/seattle.master\" \nGets or sets the URL for a custom master page file to apply to the website. \nExample: \"/sites/PubSite/_catalogs/masterpage/seattle.master\""
      },
      "Description": {
        "dataType": "string",
        "accessModifier": null,
        "isOptional": true,
        "readonly": false,
        "function": null,
        "returnType": null,
        "assignValue": null,
        "isCollection": false,
        "descr": "Gets or sets the description for the site. \nGets or sets the description for the site."
      },
      "Id": {
        "dataType": "string",
        "accessModifier": null,
        "isOptional": true,
        "readonly": false,
        "function": null,
        "returnType": null,
        "assignValue": null,
        "isCollection": false,
        "descr": "Example: \"/Guid(92ea328e-9f50-49a6-9da5-2f2dd5577041)/\" \nGets a value that specifies the site identifier for the site. \nExample: \"/Guid(92ea328e-9f50-49a6-9da5-2f2dd5577041)/\""
      },
      "IsMultilingual": {
        "dataType": "boolean",
        "accessModifier": null,
        "isOptional": true,
        "readonly": false,
        "function": null,
        "returnType": null,
        "assignValue": null,
        "isCollection": false,
        "descr": "Value that represents if the web was \nValue that represents if the web was"
      },
      "Language": {
        "dataType": "number",
        "accessModifier": null,
        "isOptional": true,
        "readonly": false,
        "function": null,
        "returnType": null,
        "assignValue": null,
        "isCollection": false,
        "descr": "Example: 1033 \nGets a value that specifies the LCID for the language that is used on the site. \nExample: 1033"
      },
      "LastItemModifiedDate": {
        "dataType": "string",
        "accessModifier": null,
        "isOptional": true,
        "readonly": false,
        "function": null,
        "returnType": null,
        "assignValue": null,
        "isCollection": false,
        "descr": "Example: \"/Date(1453618828000)/\" \nGets a value that specifies when an item was last modified in the site. \nExample: \"/Date(1453618828000)/\""
      },
      "MasterUrl": {
        "dataType": "string",
        "accessModifier": null,
        "isOptional": true,
        "readonly": false,
        "function": null,
        "returnType": null,
        "assignValue": null,
        "isCollection": false,
        "descr": "Example: \"/sites/PubSite/_catalogs/masterpage/seattle.master\" \nGets or sets the URL of the master page that is used for the website. \nExample: \"/sites/PubSite/_catalogs/masterpage/seattle.master\""
      },
      "NoCrawl": {
        "dataType": "boolean",
        "accessModifier": null,
        "isOptional": true,
        "readonly": false,
        "function": null,
        "returnType": null,
        "assignValue": null,
        "isCollection": false,
        "descr": "Determines if a particular web will be crawled by search or not. \nDetermines if a particular web will be crawled by search or not."
      },
      "QuickLaunchEnabled": {
        "dataType": "boolean",
        "accessModifier": null,
        "isOptional": true,
        "readonly": false,
        "function": null,
        "returnType": null,
        "assignValue": null,
        "isCollection": false,
        "descr": "Gets or sets a value that specifies whether the Quick Launch area is enabled on the site. \nGets or sets a value that specifies whether the Quick Launch area is enabled on the site."
      },
      "RecycleBinEnabled": {
        "dataType": "boolean",
        "accessModifier": null,
        "isOptional": true,
        "readonly": false,
        "function": null,
        "returnType": null,
        "assignValue": null,
        "isCollection": false,
        "descr": "Gets or sets a value that determines whether the recycle bin is enabled for the website. \nGets or sets a value that determines whether the recycle bin is enabled for the website."
      },
      "ServerRelativeUrl": {
        "dataType": "string",
        "accessModifier": null,
        "isOptional": true,
        "readonly": false,
        "function": null,
        "returnType": null,
        "assignValue": null,
        "isCollection": false,
        "descr": "Example: \"/sites/PubSite\" \nGets or sets the server-relative URL for the Web site. \nExample: \"/sites/PubSite\""
      },
      "SiteLogoUrl": {
        "dataType": "string",
        "accessModifier": null,
        "isOptional": true,
        "readonly": false,
        "function": null,
        "returnType": null,
        "assignValue": null,
        "isCollection": false,
        "descr": "Gets the url for the logo of this particular site. \nGets the url for the logo of this particular site."
      },
      "Title": {
        "dataType": "string",
        "accessModifier": null,
        "isOptional": true,
        "readonly": false,
        "function": null,
        "returnType": null,
        "assignValue": null,
        "isCollection": false,
        "descr": "The title of the web. \nThe title of the web."
      },
      "UIVersion": {
        "dataType": "number",
        "accessModifier": null,
        "isOptional": true,
        "readonly": false,
        "function": null,
        "returnType": null,
        "assignValue": null,
        "isCollection": false,
        "descr": "Example: 15 \nGets or sets the user interface (UI) version of the Web site. \nExample: 15"
      },
      "Url": {
        "dataType": "string",
        "accessModifier": null,
        "isOptional": true,
        "readonly": false,
        "function": null,
        "returnType": null,
        "assignValue": null,
        "isCollection": false,
        "descr": "Example: \"http: \nGets the absolute URL for the website. \nExample: \"http://example.com/sites/PubSite\""
      },
      "WebTemplate": {
        "dataType": "string",
        "accessModifier": null,
        "isOptional": true,
        "readonly": false,
        "function": null,
        "returnType": null,
        "assignValue": null,
        "isCollection": false,
        "descr": "Example: \"BLANKINTERNET\" \nGets the name of the site definition or site template that was used to create the site. \nExample: \"BLANKINTERNET\""
      }
    },
    "functions": {},
    "methods": {},
    "types": {},
    "variables": {},
    "modules": {},
    "objects": {}
  },
  "IServiceScopeProvider": {
    "implementsExtendsName": "",
    "genericType": null,
    "descr": "has an associated ServiceScope. \nThis is a convenient interface that can be used to indicate that an object \nhas an associated ServiceScope.",
    "properties": {
      "serviceScope": {
        "dataType": "ServiceScope",
        "accessModifier": null,
        "isOptional": false,
        "readonly": true,
        "function": null,
        "returnType": null,
        "assignValue": null,
        "isCollection": false,
        "descr": "for the current context. \nReturns a ServiceScope instance that can be used to obtain dependencies \nfor the current context."
      }
    },
    "functions": {},
    "methods": {},
    "types": {},
    "variables": {},
    "modules": {},
    "objects": {}
  }
}