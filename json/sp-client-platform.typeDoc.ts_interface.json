{
  "IClientSideWebPart": {
    "extendsName": null,
    "descr": "Client Side Web Part Interface. \n \nThe `render` API is mandatory to be implemented by a Web Part. All other APIs have default implementations in the \nBaseClientSideWebPart and should be overridden on a need basis.",
    "properties": [
      {
        "configureStart": {
          "descr": "Event for the webpart to start the configuration panel. A webpart needs to implement this API if they \nwant to implement a completely custom property pane. \n",
          "isOptional": true,
          "returnType": "void",
          "returnDescr": null,
          "params": []
        }
      },
      {
        "getPropertyPaneSettings": {
          "descr": "Get property pane settings \n",
          "isOptional": false,
          "returnType": "IPropertyPaneData",
          "returnDescr": "[Return description of IPropertyPaneData]",
          "params": [
            {
              "name": "ids",
              "dataType": "string[]",
              "descr": ""
            }
          ]
        }
      },
      {
        "previewUrl ?": {
          "descr": "optional property for preview/thumbnail image for the webpart \n",
          "isOptional": true,
          "type": " string",
          "isCollection": false
        }
      }
    ],
    "objects": [],
    "methods": [
      {
        "connectWebParts": {
          "descr": "Connect this webpart to other webparts. The list of connected webpart ids is persisted in the persisted \nstore. That way when the webparts re-render the infrastructure knows how to re-connect them. \n",
          "genericType": null,
          "returnType": " void",
          "returnDescr": null,
          "params": [
            {
              "name": "ids",
              "dataType": "string[]",
              "descr": ""
            }
          ]
        }
      },
      {
        "dispose": {
          "descr": "Dispose the webpart and any other resources it is holding on to e.g. DOM elements, server resources etc... \n",
          "genericType": null,
          "returnType": " void",
          "returnDescr": null,
          "params": []
        }
      },
      {
        "onBeforeRender": {
          "descr": "This API should be used to perform long running operations before rendering the Web Part. The loading indicator \nis displayed during the lifetime of this method. \n",
          "genericType": "T",
          "returnType": " Promise<T>",
          "returnDescr": "[Return description of IPropertyPaneData]",
          "params": []
        }
      },
      {
        "onBeforeSerialize": {
          "descr": "the documentation of IHtmlProperties interface for more details. \n",
          "genericType": null,
          "returnType": " IHtmlProperties",
          "returnDescr": "[Return description of IPropertyPaneData]",
          "params": []
        }
      },
      {
        "onEvent": {
          "descr": "Receives a custom event notification from the host page or another webpart. ReservedEventNames \ndefines some common events. Each webpart may process webpart specific events. \n",
          "genericType": "T",
          "returnType": " void",
          "returnDescr": "[Return description of IPropertyPaneData]",
          "params": [
            {
              "name": "eventName",
              "dataType": "string",
              "descr": ""
            },
            {
              "name": "eventObject",
              "dataType": "IWebPartEvent<T>",
              "descr": ""
            }
          ]
        }
      },
      {
        "render": {
          "descr": "This API should is called to render the Web Part in the specified display mode i.e. Read or Edit. This API is \nmandatory and hence is required to be implented by a Web Part. \n",
          "genericType": null,
          "returnType": " void",
          "returnDescr": "[Return description of IPropertyPaneData]",
          "params": [
            {
              "name": "mode",
              "dataType": "DisplayMode",
              "descr": ""
            },
            {
              "name": "data?",
              "dataType": "IWebPartData",
              "descr": ""
            }
          ]
        }
      },
      {
        "serialize": {
          "descr": "This API is called to obtain the serialized state of the Web Part instance data. The serialized state can be \nstored in a perstant databsae and deserialized to re-render the Web Part. \n",
          "genericType": null,
          "returnType": " IWebPartData",
          "returnDescr": "[Return description of IPropertyPaneData]",
          "params": []
        }
      }
    ]
  },
  "IClientSideWebPartStatusRenderer": {
    "extendsName": null,
    "descr": "Interface to be implemented by a component that should display the loading indicator and \nerror messages for a webpart.",
    "properties": [],
    "objects": [],
    "methods": [
      {
        "clearError": {
          "descr": "Clear the webpart error message.",
          "genericType": null,
          "returnType": " void",
          "returnDescr": null,
          "params": [
            {
              "name": "domElement",
              "dataType": "HTMLElement",
              "descr": ""
            }
          ]
        }
      },
      {
        "clearLoadingIndicator": {
          "descr": "Clear the loading indicator.",
          "genericType": null,
          "returnType": " void",
          "returnDescr": null,
          "params": [
            {
              "name": "domElement",
              "dataType": "Element",
              "descr": ""
            }
          ]
        }
      },
      {
        "displayLoadingIndicator": {
          "descr": "[displayLoadingIndicator description]",
          "genericType": null,
          "returnType": " void",
          "returnDescr": null,
          "params": [
            {
              "name": "domElement",
              "dataType": "Element",
              "descr": ""
            },
            {
              "name": "loadingMessage",
              "dataType": "string",
              "descr": "[description]"
            }
          ]
        }
      },
      {
        "renderError": {
          "descr": "Render the provided error message in the webpart container div.",
          "genericType": null,
          "returnType": " void",
          "returnDescr": null,
          "params": [
            {
              "name": "domElement",
              "dataType": "HTMLElement",
              "descr": ""
            },
            {
              "name": "error",
              "dataType": "Error | string",
              "descr": ""
            }
          ]
        }
      }
    ]
  },
  "ICustomPropertyPaneFieldProps": {
    "extendsName": null,
    "descr": "CustomPropertyField props.",
    "properties": [
      {
        "context": {
          "descr": "Context of the custom field.",
          "isOptional": false,
          "type": " any",
          "isCollection": false
        }
      },
      {
        "onChanged ?": {
          "descr": "onChange Event handler.",
          "isOptional": true,
          "type": " IOnCustomPropertyFieldChanged",
          "isCollection": false
        }
      },
      {
        "onDispose": {
          "descr": "Event callback for onDispose",
          "isOptional": true,
          "returnType": "void",
          "returnDescr": null,
          "params": [
            {
              "name": "elem",
              "dataType": "HTMLElement",
              "descr": ""
            }
          ]
        }
      },
      {
        "onRender:": {
          "descr": "onRender will be called once the custom field mounted to the host element.",
          "isOptional": false,
          "returnType": "void",
          "returnDescr": null,
          "params": [
            {
              "name": "elem",
              "dataType": "HTMLElement",
              "descr": ""
            },
            {
              "name": "context",
              "dataType": "any",
              "descr": ""
            },
            {
              "name": "onChanged?",
              "dataType": "IOnCustomPropertyFieldChanged",
              "descr": ""
            }
          ]
        }
      },
      {
        "value": {
          "descr": "Value of the field.",
          "isOptional": false,
          "type": " any",
          "isCollection": false
        }
      }
    ],
    "objects": [],
    "methods": []
  },
  "IEvent<T>": {
    "extendsName": null,
    "descr": "Event object",
    "properties": [
      {
        "data ?": {
          "descr": "Event object",
          "isOptional": true,
          "type": " T",
          "isCollection": false
        }
      },
      {
        "sourceId": {
          "descr": "Event object",
          "isOptional": false,
          "type": " string",
          "isCollection": false
        }
      },
      {
        "targetId": {
          "descr": "Event object",
          "isOptional": false,
          "type": " string",
          "isCollection": false
        }
      }
    ],
    "objects": [],
    "methods": []
  },
  "IEventAggregator": {
    "extendsName": null,
    "descr": "Publis APIs for the EventAggregator. Event names must follow the following format \n\"eventName:action\" e.g. \"configure:start\" and \"configure:end\"",
    "properties": [],
    "objects": [],
    "methods": [
      {
        "raiseEvent": {
          "descr": "Raise an event",
          "genericType": "T",
          "returnType": " void",
          "returnDescr": null,
          "params": [
            {
              "name": "eventName",
              "dataType": "string",
              "descr": ""
            },
            {
              "name": "eventObject",
              "dataType": "IEvent<T>",
              "descr": ""
            }
          ]
        }
      },
      {
        "subscribeByEventName": {
          "descr": "Subscribe for an event from all sources",
          "genericType": "T",
          "returnType": " void",
          "returnDescr": null,
          "params": [
            {
              "name": "eventName",
              "dataType": "string",
              "descr": ""
            },
            {
              "name": "subscriberId",
              "dataType": "string",
              "descr": ""
            },
            {
              "name": "callback",
              "dataType": "IEventCallback<T>",
              "descr": ""
            }
          ]
        }
      },
      {
        "subscribeBySourceId": {
          "descr": "Subscribe for all events from a specific source.",
          "genericType": "T",
          "returnType": " void",
          "returnDescr": null,
          "params": [
            {
              "name": "sourceId",
              "dataType": "string",
              "descr": ""
            },
            {
              "name": "subscriberId",
              "dataType": "string",
              "descr": ""
            },
            {
              "name": "callback",
              "dataType": "IEventCallback<T>",
              "descr": ""
            }
          ]
        }
      }
    ]
  },
  "IEventCallback<T>": {
    "extendsName": null,
    "descr": "Event callback",
    "properties": [],
    "objects": [],
    "methods": []
  },
  "IHtmlProperties": {
    "extendsName": null,
    "descr": "Structure of the data that a webpart developer can return on the onBeforeSerialize() API. \nThe outcome contains 3 kay/value dictionaries for properties that need to be search indexed. \nBoth keys and values are expected to be strings and will be HTML encoded during serialization. \n \n{ \nsearchableProperties: { 'prop1': 'value_of_prop1' }, \nlinkProperties: { 'prop2': 'http://www.contoso.com/page1.aspx' }, \nimageLinkPropertes: { 'prop3': 'http://www.contoso.com/imag.png' } \n} \n \nThis input would get translated to the following HTML string. \n \n\"<div data-sp-prop-name='prop1'>value1</div> \n<link data-sp-prop-name='prop2' href='http://www.contoso.com/page1.aspx'> \n<img data-sp-prop-name='prop2' href='http://www.contoso.com/image.png'>\"",
    "properties": [],
    "objects": [],
    "methods": []
  },
  "IOdataList": {
    "extendsName": null,
    "descr": "Represents an OData SP.List object. For more information about this object \nsee the MSDN documentation here: \nhttps://msdn.microsoft.com/en-us/library/office/jj860569.aspx",
    "properties": [
      {
        "BaseTemplate": {
          "descr": "Represents an OData SP.List object. For more information about this object \nsee the MSDN documentation here: \nhttps://msdn.microsoft.com/en-us/library/office/jj860569.aspx",
          "isOptional": false,
          "type": " number",
          "isCollection": false
        }
      },
      {
        "Created": {
          "descr": "Example: \"/Date(1453294804000)/\"",
          "isOptional": false,
          "type": " string",
          "isCollection": false
        }
      },
      {
        "CurrentChangeToken": {
          "descr": "Example: \"/Date(1453294804000)/\"",
          "isOptional": false,
          "type": " IOdataChangeToken",
          "isCollection": false
        }
      },
      {
        "Description": {
          "descr": "Example: \"/Date(1453294804000)/\"",
          "isOptional": false,
          "type": " string",
          "isCollection": false
        }
      },
      {
        "EntityTypeName": {
          "descr": "Example: \"MyListTitleList\"",
          "isOptional": false,
          "type": " string",
          "isCollection": false
        }
      },
      {
        "Hidden": {
          "descr": "Example: \"MyListTitleList\"",
          "isOptional": false,
          "type": " boolean",
          "isCollection": false
        }
      },
      {
        "Id": {
          "descr": "Example: \"/Guid(9fb9199b-65f2-4a4a-b597-11d1a44422c1)/\"",
          "isOptional": false,
          "type": " string",
          "isCollection": false
        }
      },
      {
        "LastItemDeletedDate": {
          "descr": "Example: \"/Date(1453294809000)/\"",
          "isOptional": false,
          "type": " string",
          "isCollection": false
        }
      },
      {
        "LastItemModifiedDate": {
          "descr": "Example: \"/Date(1453294809000)/\"",
          "isOptional": false,
          "type": " string",
          "isCollection": false
        }
      },
      {
        "ListItemEntityTypeFullName": {
          "descr": "Example: \"SP.Data.MyListTitleListItem\"",
          "isOptional": false,
          "type": " string",
          "isCollection": false
        }
      },
      {
        "ParentWebUrl": {
          "descr": "Example: \"/sites/PubSite\"",
          "isOptional": false,
          "type": " string",
          "isCollection": false
        }
      },
      {
        "TemplateFeatureId": {
          "descr": "Example: \"/Guid(22a9ef51-737b-4ff2-9346-694633fe4416)/\"",
          "isOptional": false,
          "type": " string",
          "isCollection": false
        }
      },
      {
        "Title": {
          "descr": "Example: \"Pages\"",
          "isOptional": false,
          "type": " string",
          "isCollection": false
        }
      }
    ],
    "objects": [],
    "methods": []
  },
  "IOdataListItem": {
    "extendsName": null,
    "descr": "Represents an OData SP.ListItem object. For more information about this object \nsee the MSDN documentation here: \nhttps://msdn.microsoft.com/en-us/library/office/jj860569.aspx",
    "properties": [
      {
        "ID": {
          "descr": "[ID description]",
          "isOptional": false,
          "type": " number",
          "isCollection": false
        }
      },
      {
        "Title": {
          "descr": "[ID description]",
          "isOptional": false,
          "type": " string",
          "isCollection": false
        }
      },
      {
        "UniqueId": {
          "descr": "Example: \"/Guid(d5369f3b-bd7a-412a-9c0f-7f0650bb5489)/\"",
          "isOptional": false,
          "type": " string",
          "isCollection": false
        }
      }
    ],
    "objects": [],
    "methods": []
  },
  "IOdataUser": {
    "extendsName": null,
    "descr": "Represents an OData SP.User object. For more information about this object \nsee the MSDN documentation here: \nhttps://msdn.microsoft.com/en-us/library/office/jj860569.aspx",
    "properties": [
      {
        "Email": {
          "descr": "Example: \"someone@example.com\"",
          "isOptional": false,
          "type": " string",
          "isCollection": false
        }
      },
      {
        "Id": {
          "descr": "Example: \"someone@example.com\"",
          "isOptional": false,
          "type": " number",
          "isCollection": false
        }
      },
      {
        "IsSiteAdmin": {
          "descr": "Example: \"someone@example.com\"",
          "isOptional": false,
          "type": " boolean",
          "isCollection": false
        }
      },
      {
        "LoginName": {
          "descr": "Example: \"i:0#.w|domain\\user\"",
          "isOptional": false,
          "type": " string",
          "isCollection": false
        }
      },
      {
        "PrincipalType": {
          "descr": "Example: \"i:0#.w|domain\\user\"",
          "isOptional": false,
          "type": " number",
          "isCollection": false
        }
      },
      {
        "Title": {
          "descr": "Example: \"DOMAIN\\user\"",
          "isOptional": false,
          "type": " string",
          "isCollection": false
        }
      },
      {
        "UserId": {
          "descr": "Example: \"DOMAIN\\user\"",
          "isOptional": false,
          "type": " IOdataUserId",
          "isCollection": false
        }
      }
    ],
    "objects": [],
    "methods": []
  },
  "IOdataUserId": {
    "extendsName": null,
    "descr": "Represents an OData SP.UserId object. For more information about this object \nsee the MSDN documentation here: \nhttps://msdn.microsoft.com/en-us/library/office/jj860569.aspx",
    "properties": [
      {
        "NameId": {
          "descr": "Represents an OData SP.UserId object. For more information about this object \nsee the MSDN documentation here: \nhttps://msdn.microsoft.com/en-us/library/office/jj860569.aspx",
          "isOptional": false,
          "type": " string",
          "isCollection": false
        }
      },
      {
        "NameIdIssuer": {
          "descr": "Example: \"urn:office:idp:activedirectory\"",
          "isOptional": false,
          "type": " string",
          "isCollection": false
        }
      }
    ],
    "objects": [],
    "methods": []
  },
  "IOdataWeb": {
    "extendsName": null,
    "descr": "Represents an OData SP.Web object. For more information about this object \nsee the MSDN documentation here: \nhttps://msdn.microsoft.com/en-us/library/office/jj860569.aspx",
    "properties": [
      {
        "Created": {
          "descr": "Example: \"/Date(2016,0,20,12,58,7,0)/\"",
          "isOptional": false,
          "type": " string",
          "isCollection": false
        }
      },
      {
        "CurrentChangeToken": {
          "descr": "Example: \"/Date(2016,0,20,12,58,7,0)/\"",
          "isOptional": false,
          "type": " IOdataChangeToken",
          "isCollection": false
        }
      },
      {
        "CustomMasterUrl": {
          "descr": "Example: \"/sites/PubSite/_catalogs/masterpage/seattle.master\"",
          "isOptional": false,
          "type": " string",
          "isCollection": false
        }
      },
      {
        "Description": {
          "descr": "Example: \"/sites/PubSite/_catalogs/masterpage/seattle.master\"",
          "isOptional": false,
          "type": " string",
          "isCollection": false
        }
      },
      {
        "Id": {
          "descr": "Example: \"/Guid(92ea328e-9f50-49a6-9da5-2f2dd5577041)/\"",
          "isOptional": false,
          "type": " string",
          "isCollection": false
        }
      },
      {
        "IsMultilingual": {
          "descr": "Example: \"/Guid(92ea328e-9f50-49a6-9da5-2f2dd5577041)/\"",
          "isOptional": false,
          "type": " boolean",
          "isCollection": false
        }
      },
      {
        "Language": {
          "descr": "Example: \"/Guid(92ea328e-9f50-49a6-9da5-2f2dd5577041)/\"",
          "isOptional": false,
          "type": " number",
          "isCollection": false
        }
      },
      {
        "LastItemModifiedDate": {
          "descr": "Example: \"/Date(1453618828000)/\"",
          "isOptional": false,
          "type": " string",
          "isCollection": false
        }
      },
      {
        "MasterUrl": {
          "descr": "Example: \"/sites/PubSite/_catalogs/masterpage/seattle.master\"",
          "isOptional": false,
          "type": " string",
          "isCollection": false
        }
      },
      {
        "NoCrawl": {
          "descr": "Example: \"/sites/PubSite/_catalogs/masterpage/seattle.master\"",
          "isOptional": false,
          "type": " boolean",
          "isCollection": false
        }
      },
      {
        "QuickLaunchEnabled": {
          "descr": "Example: \"/sites/PubSite/_catalogs/masterpage/seattle.master\"",
          "isOptional": false,
          "type": " boolean",
          "isCollection": false
        }
      },
      {
        "RecycleBinEnabled": {
          "descr": "Example: \"/sites/PubSite/_catalogs/masterpage/seattle.master\"",
          "isOptional": false,
          "type": " boolean",
          "isCollection": false
        }
      },
      {
        "ServerRelativeUrl": {
          "descr": "Example: \"/sites/PubSite\"",
          "isOptional": false,
          "type": " string",
          "isCollection": false
        }
      },
      {
        "SiteLogoUrl": {
          "descr": "Example: \"/sites/PubSite\"",
          "isOptional": false,
          "type": " string",
          "isCollection": false
        }
      },
      {
        "Title": {
          "descr": "Example: \"/sites/PubSite\"",
          "isOptional": false,
          "type": " string",
          "isCollection": false
        }
      },
      {
        "UIVersion": {
          "descr": "Example: \"/sites/PubSite\"",
          "isOptional": false,
          "type": " number",
          "isCollection": false
        }
      },
      {
        "Url": {
          "descr": "Example: \"http://example.com/sites/PubSite\"",
          "isOptional": false,
          "type": " string",
          "isCollection": false
        }
      },
      {
        "WebTemplate": {
          "descr": "Example: \"BLANKINTERNET\"",
          "isOptional": false,
          "type": " string",
          "isCollection": false
        }
      }
    ],
    "objects": [],
    "methods": []
  },
  "IOnCustomPropertyFieldChanged": {
    "extendsName": null,
    "descr": "CustomPropertyFieldChanged contract.",
    "properties": [],
    "objects": [],
    "methods": []
  },
  "IPropertyPaneField": {
    "extendsName": null,
    "descr": "PropertyPane field.",
    "properties": [
      {
        "id ?": {
          "descr": "ID to identify the field uniquely. \nUniqueness is not guarenteed from the framework. \nExample: 'someUniqueName'",
          "isOptional": true,
          "type": " string",
          "isCollection": false
        }
      },
      {
        "properties": {
          "descr": "Strongly typed properties object. Specific to each field type. \nExample: Checkbox has ICheckboxProps, TextField has ITextField props.",
          "isOptional": false,
          "type": " ICheckboxProps | ITextFieldProps | IToggleProps | IDropdownProps |",
          "isCollection": false
        }
      },
      {
        "ICustomPropertyPaneFieldProps | ILabelProps | ISliderProps | IChoiceGroupProps |": {
          "descr": "Strongly typed properties object. Specific to each field type. \nExample: Checkbox has ICheckboxProps, TextField has ITextField props.",
          "isOptional": false,
          "type": "ICustomPropertyPaneFieldProps | ILabelProps | ISliderProps | IChoiceGroupProps |",
          "isCollection": false
        }
      },
      {
        "IButtonProps | ILinkProps | any": {
          "descr": "Strongly typed properties object. Specific to each field type. \nExample: Checkbox has ICheckboxProps, TextField has ITextField props.",
          "isOptional": false,
          "type": "IButtonProps | ILinkProps | any",
          "isCollection": false
        }
      },
      {
        "targetProperty": {
          "descr": "Target property from the web part's property bag.",
          "isOptional": false,
          "type": " string",
          "isCollection": false
        }
      },
      {
        "type": {
          "descr": "Type of the PropertyPane field.",
          "isOptional": false,
          "type": " IPropertyPaneFieldType",
          "isCollection": false
        }
      }
    ],
    "objects": [],
    "methods": []
  },
  "IPropertyPaneGroup": {
    "extendsName": null,
    "descr": "PropertyPane group. Group is part of the PropertyPanePage.",
    "properties": [
      {
        "groupFields": {
          "descr": "List of PropertyPane fields.",
          "isOptional": false,
          "type": " IPropertyPaneField",
          "isCollection": true
        }
      },
      {
        "groupName ?": {
          "descr": "Display name for the group.",
          "isOptional": true,
          "type": " string",
          "isCollection": false
        }
      }
    ],
    "objects": [],
    "methods": []
  },
  "IPropertyPaneHeader": {
    "extendsName": null,
    "descr": "PropertyPane header. \nThis header remains same for all the pages.",
    "properties": [
      {
        "description": {
          "descr": "Header to display.",
          "isOptional": false,
          "type": " string",
          "isCollection": false
        }
      },
      {
        "image ?": {
          "descr": "Image url for the background image.",
          "isOptional": true,
          "type": " string",
          "isCollection": false
        }
      }
    ],
    "objects": [],
    "methods": []
  },
  "IPropertyPanePage": {
    "extendsName": null,
    "descr": "PropertyPane page.",
    "properties": [
      {
        "groups": {
          "descr": "List of gropus to be displayed on the PropertyPane page.",
          "isOptional": false,
          "type": " IPropertyPaneGroup",
          "isCollection": true
        }
      },
      {
        "header ?": {
          "descr": "PropertyPane page header.",
          "isOptional": true,
          "type": " IPropertyPaneHeader",
          "isCollection": false
        }
      }
    ],
    "objects": [],
    "methods": []
  },
  "IPropertyPaneSettings": {
    "extendsName": null,
    "descr": "Web Part configuration settings",
    "properties": [
      {
        "currentPage ?": {
          "descr": "Page to be displayed on the PropertyPane.",
          "isOptional": true,
          "type": " number",
          "isCollection": false
        }
      },
      {
        "pages": {
          "descr": "Total number of pages on the PropertyPane.",
          "isOptional": false,
          "type": " IPropertyPanePage",
          "isCollection": true
        }
      }
    ],
    "objects": [],
    "methods": []
  },
  "IReactWebPartProps": {
    "extendsName": "IWebPartProps",
    "descr": "",
    "properties": [
      {
        "data": {
          "descr": "WebPart data",
          "isOptional": false,
          "type": " IWebPartData",
          "isCollection": false
        }
      },
      {
        "mode": {
          "descr": "The display mode for the summary links component. It is either Read or Edit. \nThis value is read from web part and passed to here. \n",
          "isOptional": false,
          "type": " DisplayMode",
          "isCollection": false
        }
      }
    ],
    "objects": [],
    "methods": []
  },
  "IShell": {
    "extendsName": "IServiceScopeProvider",
    "descr": "The system shell manages the initial loading of the scripts for a client-side application, \nas well as constructin the ClientSideApplication object, and initializing key services such \nas the page chrome, page context, HTTP client, etc.",
    "properties": [
      {
        "basicHttpClient": {
          "descr": "BasicHttpClient is used to perform REST calls with general internet services. \nFor communicating with SharePoint services, use HttpClient instead.",
          "isOptional": false,
          "type": " BasicHttpClient",
          "isCollection": false
        }
      },
      {
        "httpClient": {
          "descr": "HttpClient is used to perform REST calls with SharePoint services. \nIt implements special enhancements such as configuring default headers, adding \nan \"X-RequestDigest\" header for write operations, and collecting telemetry \nto help the service monitor the performance and reliability of the application. \n \nFor communicating with non-SharePoint services, use BasicHttpClient instead.",
          "isOptional": false,
          "type": " HttpClient",
          "isCollection": false
        }
      },
      {
        "pageContext": {
          "descr": "Returns the current page context object for the applcation.",
          "isOptional": false,
          "type": " PageContext",
          "isCollection": false
        }
      },
      {
        "serviceScope": {
          "descr": "Returns a ServiceScope instance that can be used to obtain dependencies \nfor the current context.",
          "isOptional": false,
          "type": " ServiceScope",
          "isCollection": false
        }
      },
      {
        "suiteNav": {
          "descr": "This object allows the application to manage the suite navigation of \nthe standard page chrome. For more information about Suite Navigation, \nsee this article: \nhttps://msdn.microsoft.com/en-us/library/office/dn614990.aspx",
          "isOptional": false,
          "type": " IComponentVisible",
          "isCollection": false
        }
      }
    ],
    "objects": [],
    "methods": []
  },
  "ISuiteNavManagerConfiguration": {
    "extendsName": null,
    "descr": "Interface for the Suite Nav Manager Configuration",
    "properties": [
      {
        "cacheToken": {
          "descr": "Gets the cache token that is used to determine whether or not the \nSuite Nav data that is cached is valid.",
          "isOptional": false,
          "type": " string",
          "isCollection": false
        }
      },
      {
        "currentUICultureName": {
          "descr": "Property representing the culture name (e.g. \"en-us\")",
          "isOptional": false,
          "type": " string",
          "isCollection": false
        }
      },
      {
        "hamburgerCallback:": {
          "descr": "Callback to use when suite nav hamburger button is clicked. If not specified, \nsuite nav's hamburger button will not be shown.",
          "isOptional": false,
          "returnType": "void",
          "returnDescr": null,
          "params": []
        }
      },
      {
        "modifySuiteNavData:": {
          "descr": "Callback used to modify the Suite Nav to be app specific.",
          "isOptional": false,
          "returnType": "ISuiteNavData",
          "returnDescr": null,
          "params": [
            {
              "name": "suiteNavData",
              "dataType": "ISuiteNavData",
              "descr": ""
            }
          ]
        }
      },
      {
        "o365ShellRenderSettings": {
          "descr": "Represents the set of settings for rendering the Suite Nav.",
          "isOptional": false,
          "type": " IO365ShellRenderSettings",
          "isCollection": false
        }
      },
      {
        "suiteNavPostRenderCallback:": {
          "descr": "Callback to use when suite nav basic shell has render.",
          "isOptional": false,
          "returnType": "void",
          "returnDescr": null,
          "params": []
        }
      },
      {
        "systemUserKey": {
          "descr": "Represents the user key used to uniquely identify a cache entry.",
          "isOptional": false,
          "type": " string",
          "isCollection": false
        }
      },
      {
        "webServerRelativeUrl": {
          "descr": "Represents the web server relative url where we would ping the Suite Nav service.",
          "isOptional": false,
          "type": " string",
          "isCollection": false
        }
      }
    ],
    "objects": [],
    "methods": [
      {
        "disableSuiteNav": {
          "descr": "Function that prevents the suiteNav from loading",
          "genericType": null,
          "returnType": " void",
          "returnDescr": null,
          "params": []
        }
      },
      {
        "isSuiteNavDisabled": {
          "descr": "Callback to use when suite nav hamburger button is clicked. If not specified, \nsuite nav's hamburger button will not be shown.",
          "genericType": null,
          "returnType": " boolean",
          "returnDescr": null,
          "params": []
        }
      }
    ]
  },
  "IWebPartConfigurationEventCallback": {
    "extendsName": null,
    "descr": "Configuration event callback",
    "properties": [],
    "objects": [],
    "methods": []
  },
  "IWebPartContext": {
    "extendsName": "ICommonWebPartContext",
    "descr": "Context object that needs to be passed to the WebPart constructor.",
    "properties": [
      {
        "configureStart": {
          "descr": "Function to open PropertyPane",
          "isOptional": true,
          "returnType": "void",
          "returnDescr": null,
          "params": [
            {
              "name": "id",
              "dataType": "string",
              "descr": ""
            },
            {
              "name": "propertyPaneState?",
              "dataType": "PropertyPaneState",
              "descr": ""
            }
          ]
        }
      },
      {
        "domElement": {
          "descr": "Reference to the DOM element that contains the webpart.",
          "isOptional": false,
          "type": " HTMLElement",
          "isCollection": false
        }
      },
      {
        "host": {
          "descr": "Reference to the DOM element that contains the webpart.",
          "isOptional": false,
          "type": " IWebPartHost",
          "isCollection": false
        }
      },
      {
        "instanceId": {
          "descr": "WebPart instance id",
          "isOptional": false,
          "type": " string",
          "isCollection": false
        }
      },
      {
        "manifest": {
          "descr": "WebPart manifest",
          "isOptional": false,
          "type": " IClientSideWebPartManifest<any>",
          "isCollection": false
        }
      }
    ],
    "objects": [],
    "methods": []
  },
  "IWebPartData": {
    "extendsName": "IClientSideWebPartManifestBase",
    "descr": "This structure represents the the serialized state of a webpart. When the serialize() API is called on \na webpart, the output should be this structure. The structure of the 'properties' field is owned by the \nwebpart and is specific to the webpart. Each webpart can decide the set of properties it wants to \nserialialize.",
    "properties": [
      {
        "connectedWebPartIds ?": {
          "descr": "definition: list of webpart instance ids to which this webpart is connected. Note, these are webpart \ninstance ids and not type ids. One webpart can have multiple instances on one page. WebParts \nneed to be connected in order to send events to each other. \nhow used: used by the webpart to manage its internal metadata and config data. The framework code never \ntouches these properties. \nmandatory: no. \ntype: string[] \nsupported values: same as webpart instance ids. \nexample: [\"dbef608d-3ad5-4f8f-b139-d916f2f0a294\", \"dbef608d-3ad5-4f8f-b139-049a20b48\"] \nexperimental: yes",
          "isOptional": true,
          "type": " string",
          "isCollection": false
        }
      },
      {
        "displayName": {
          "descr": "Definition: webpart display name. \nUsage: display the name of the webpart in the toolbox, webpart gallery and the page. \nRequired: yes \nType: string \nSupported values: string less than 100 characters \nExample: \"Text\"",
          "isOptional": false,
          "type": " string",
          "isCollection": false
        }
      },
      {
        "htmlProperties ?": {
          "descr": "definition: HTML markup equivalent for searchable properties and properties that need link fixup. \nformat: pseudo HTML \nmandatory: no. \ntype: string \nsupported values: a string containing pseudo HTML. \nexample: \"<div>searchable_property_value</div><link href='http://contoso.com/path_of_link.aspx' />\" \nexperimental: yes",
          "isOptional": true,
          "type": " string",
          "isCollection": false
        }
      },
      {
        "id": {
          "descr": "Definition: universally unique webpart Type id. \nUsage: uniquely identify a webpart. \nRequired: yes \nType: GUID \nSupported values: any GUID \nExample: \"dbef608d-3ad5-4f8f-b139-d916f2f0a294\"",
          "isOptional": false,
          "type": " string",
          "isCollection": false
        }
      },
      {
        "instanceId": {
          "descr": "definition: universally instance id of the webpart. A web part can have multiple instances on a page. This id \nis expected to be universally unique accross time and page boundaries. \nhow used: used by the framework to uniquely identify an instance of a webpart. \nmandatory: yes. \ntype: string \nsupported values: a unique string. Could be GUID or other uniquely identifiable formats. \nexample: [\"dbef608d-3ad5-4f8f-b139-d916f2f0a294\"]",
          "isOptional": false,
          "type": " string",
          "isCollection": false
        }
      },
      {
        "properties ?": {
          "descr": "definition: webpart specific properties. The individual webpart owns the definition of these properties. \nhow used: used by the webpart to manage its internal metadata and config data. The framework code never \ntouches these properties. \nmandatory: yes. \ntype: string \nsupported values: any JSON stringifiable object hierarchy. \nexample: { 'value': 'text value' }",
          "isOptional": true,
          "type": " any",
          "isCollection": false
        }
      },
      {
        "version": {
          "descr": "Definition: webpart version. \nUsage: versioning and evolving a webpart safely. \nRequired: yes \nType: string representing a semantic version (http://semver.org) \nSupported values: MAJOR.MINOR.PATCH \nExample: \"1.0.0\"",
          "isOptional": false,
          "type": " string",
          "isCollection": false
        }
      }
    ],
    "objects": [],
    "methods": []
  },
  "IWebPartEvent<T>": {
    "extendsName": "IEvent<T>",
    "descr": "Structure representing webpart - webpart events",
    "properties": [
      {
        "data ?": {
          "descr": "Structure representing webpart - webpart events",
          "isOptional": true,
          "type": " T",
          "isCollection": false
        }
      },
      {
        "source": {
          "descr": "Source webpart name",
          "isOptional": false,
          "type": " string",
          "isCollection": false
        }
      },
      {
        "sourceId": {
          "descr": "Source webpart name",
          "isOptional": false,
          "type": " string",
          "isCollection": false
        }
      },
      {
        "target": {
          "descr": "Target webpart name",
          "isOptional": false,
          "type": " string",
          "isCollection": false
        }
      },
      {
        "targetId": {
          "descr": "Target webpart name",
          "isOptional": false,
          "type": " string",
          "isCollection": false
        }
      }
    ],
    "objects": [],
    "methods": []
  },
  "IWebPartHost": {
    "extendsName": null,
    "descr": "",
    "properties": [
      {
        "basicHttpClient": {
          "descr": "BasicHttpClient is used to perform REST calls with general internet services. \nFor communicating with SharePoint services, use HttpClient instead.",
          "isOptional": false,
          "type": " BasicHttpClient",
          "isCollection": false
        }
      },
      {
        "eventAggregator ?": {
          "descr": "Event aggregator",
          "isOptional": true,
          "type": " IEventAggregator",
          "isCollection": false
        }
      },
      {
        "hostType": {
          "descr": "Event aggregator",
          "isOptional": false,
          "type": " HostType",
          "isCollection": false
        }
      },
      {
        "httpClient": {
          "descr": "HttpClient is used to perform REST calls with SharePoint services. \nIt implements special enhancements such as configuring default headers, adding \nan \"X-RequestDigest\" header for write operations, and collecting telemetry \nto help the service monitor the performance and reliability of the application. \n \nFor communicating with non-SharePoint services, use BasicHttpClient instead.",
          "isOptional": false,
          "type": " HttpClient",
          "isCollection": false
        }
      },
      {
        "newPageContext": {
          "descr": "rename newPageContext->pageContext and migrate existing web part projects. \n(VSO Task #163986 is tracking the new PageContext design.)",
          "isOptional": false,
          "type": " IPageContext",
          "isCollection": false
        }
      },
      {
        "pageContext": {
          "descr": "Page context provided by the host. This context is expected to provide sharepoint \npage level info like site URLs, locale info, theme id etc...",
          "isOptional": false,
          "type": " PreloadedPageData",
          "isCollection": false
        }
      },
      {
        "resourceLoader ?": {
          "descr": "Resource loader",
          "isOptional": true,
          "type": " IResourceLoader",
          "isCollection": false
        }
      },
      {
        "setDirty": {
          "descr": "Resource loader",
          "isOptional": true,
          "returnType": "void",
          "returnDescr": null,
          "params": [
            {
              "name": "instanceId",
              "dataType": "string",
              "descr": ""
            },
            {
              "name": "data?",
              "dataType": "any",
              "descr": ""
            }
          ]
        }
      },
      {
        "statusRenderer ?": {
          "descr": "Helper class to render loading and error indicators for the webpart",
          "isOptional": true,
          "type": " IClientSideWebPartStatusRenderer",
          "isCollection": false
        }
      },
      {
        "webPartConfigurationEventCallback ?": {
          "descr": "Configuration event callback",
          "isOptional": true,
          "type": " IWebPartConfigurationEventCallback",
          "isCollection": false
        }
      }
    ],
    "objects": [],
    "methods": []
  },
  "TextResource": {
    "extendsName": null,
    "descr": "",
    "properties": [
      {
        "content": {
          "descr": "",
          "isOptional": false,
          "type": " string",
          "isCollection": false
        }
      },
      {
        "error": {
          "descr": "",
          "isOptional": false,
          "type": " Error",
          "isCollection": false
        }
      }
    ],
    "objects": [],
    "methods": []
  }
}